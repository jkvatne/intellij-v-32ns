V Language file
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_typeof_on_simple_expressions')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('123')
              PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            CALL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('int')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    LITERAL
                      PsiElement(VlangTokenType.int)('42')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            CALL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('f64')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    LITERAL
                      PsiElement(VlangTokenType.float)('3.14')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('f64')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            ADD_EXPR
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('int')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      LITERAL
                        PsiElement(VlangTokenType.int)('2')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.+)('+')
              MUL_EXPR
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
                PsiElement(VlangTokenType.*)('*')
                LITERAL
                  PsiElement(VlangTokenType.int)('10')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            MUL_EXPR
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('f64')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      LITERAL
                        PsiElement(VlangTokenType.float)('1.0')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.*)('*')
              LITERAL
                PsiElement(VlangTokenType.float)('12.2')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('f64')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert typeof(1.0 * f32(12.2)) == 'f32'')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('a2 := 123')
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert typeof(a2) == 'int_literal'')
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert typeof(42) == 'int_literal'')
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert typeof(3.14) == 'float_literal'')
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert typeof(2+2*10) == 'int_literal'')
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert typeof(1.0 * 12.2) == 'float_literal'')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_arrays')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('aint')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('int')
            PsiElement(VlangTokenType.{)('{')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('astring')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('string')
            PsiElement(VlangTokenType.{)('{')
            PsiElement(VlangTokenType.})('}')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('aint')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[]int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('astring')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[]string')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('aint')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[]int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('astring')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[]string')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_type_constructors')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('v')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL
            PsiElement(VlangTokenType.char)('`c`')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              UNARY_EXPR
                PsiElement(VlangTokenType.&)('&')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('v')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('&rune')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              UNARY_EXPR
                PsiElement(VlangTokenType.&)('&')
                ARRAY_CREATION
                  PsiElement(VlangTokenType.[)('[')
                  ARRAY_CREATION_LIST
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('v')
                  PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('&[]rune')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              ARRAY_CREATION
                PsiElement(VlangTokenType.[)('[')
                ARRAY_CREATION_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('v')
                PsiElement(VlangTokenType.])(']')
                PsiElement(VlangTokenType.!)('!')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[1]rune')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              UNARY_EXPR
                PsiElement(VlangTokenType.&)('&')
                ARRAY_CREATION
                  PsiElement(VlangTokenType.[)('[')
                  ARRAY_CREATION_LIST
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('v')
                  PsiElement(VlangTokenType.])(']')
                  PsiElement(VlangTokenType.!)('!')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('&[1]rune')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              UNARY_EXPR
                PsiElement(VlangTokenType.&)('&')
                LITERAL_VALUE_EXPRESSION
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('FooBar')
                  PsiElement(VlangTokenType.{)('{')
                  PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('&FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('FooBar')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('x')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_typeof_on_structs')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            LITERAL_VALUE_EXPRESSION
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('FooBar')
              PsiElement(VlangTokenType.{)('{')
              PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('astruct_static')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            FIXED_SIZE_ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              LITERAL
                PsiElement(VlangTokenType.int)('2')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('FooBar')
            PsiElement(VlangTokenType.{)('{')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('astruct_dynamic')
          PsiElement(VlangTokenType.:=)(':=')
          ARRAY_CREATION
            PsiElement(VlangTokenType.[)('[')
            ARRAY_CREATION_LIST
              LITERAL_VALUE_EXPRESSION
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('FooBar')
                PsiElement(VlangTokenType.{)('{')
                PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.,)(',')
              LITERAL_VALUE_EXPRESSION
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('FooBar')
                PsiElement(VlangTokenType.{)('{')
                PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.])(']')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('astruct_static')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[2]FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('astruct_static')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[2]FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('astruct_dynamic')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[]FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('astruct_dynamic')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[]FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiElement(VlangTokenType.})('}')
  TYPE_ALIAS_DECLARATION
    PsiElement(VlangTokenType.type)('type')
    ALIAS_TYPE
      PsiElement(VlangTokenType.identifier)('MySumType')
      PsiElement(VlangTokenType.=)('=')
      TYPE_UNION_LIST
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('FooBar')
        PsiElement(VlangTokenType.|)('|')
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('f32')
        PsiElement(VlangTokenType.|)('|')
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('int')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('ms')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('MySumType')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('str')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          MATCH_EXPRESSION
            PsiElement(VlangTokenType.match)('match')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('ms')
            PsiElement(VlangTokenType.{)('{')
            MATCH_ARMS
              MATCH_ARM
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('int')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('ms')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('str')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
              MATCH_ARM
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f32')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('ms')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('str')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
              PsiComment(VLANG_DOC_COMMENT)
                PsiElement(VlangTokenType.<DOC_GAP>)('//')
                PsiElement(VlangTokenType.<DOC_DATA>)('FooBar { return it.x.str() }')
              MATCH_ELSE_ARM_CLAUSE
                PsiElement(VlangTokenType.else)('else')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('ms')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('type_name')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_typeof_on_sumtypes')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('MySumType')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('int')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          LITERAL
                            PsiElement(VlangTokenType.int)('32')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('MySumType')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('f32')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          LITERAL
                            PsiElement(VlangTokenType.float)('123.0')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('c')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('MySumType')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL_VALUE_EXPRESSION
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('FooBar')
                    PsiElement(VlangTokenType.{)('{')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('x')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        LITERAL
                          PsiElement(VlangTokenType.int)('43')
                    PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('f32')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('c')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('f32')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('c')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('typeof should be known at compile-time for all types')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('MySumType')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('MySumType')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('c')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('MySumType')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('str')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('32')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('str')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('123.0')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('c')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('str')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('UnaryExpr')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('a')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('BinExpr')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('a')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('BoolExpr')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('z')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
      PsiElement(VlangTokenType.})('}')
  TYPE_ALIAS_DECLARATION
    PsiElement(VlangTokenType.type)('type')
    ALIAS_TYPE
      PsiElement(VlangTokenType.identifier)('ExprType')
      PsiElement(VlangTokenType.=)('=')
      TYPE_UNION_LIST
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('BinExpr')
        PsiElement(VlangTokenType.|)('|')
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('BoolExpr')
        PsiElement(VlangTokenType.|)('|')
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('UnaryExpr')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('fexpr')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('k')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('ExprType')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          MATCH_EXPRESSION
            PsiElement(VlangTokenType.match)('match')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('k')
            PsiElement(VlangTokenType.{)('{')
            MATCH_ARMS
              MATCH_ARM
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    LITERAL_VALUE_EXPRESSION
                      TYPE
                        TYPE_MODIFIERS
                          <empty list>
                        TYPE_REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('UnaryExpr')
                      PsiElement(VlangTokenType.{)('{')
                      PsiElement(VlangTokenType.})('}')
                  PsiElement(VlangTokenType.})('}')
              MATCH_ARM
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    LITERAL_VALUE_EXPRESSION
                      TYPE
                        TYPE_MODIFIERS
                          <empty list>
                        TYPE_REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('BinExpr')
                      PsiElement(VlangTokenType.{)('{')
                      PsiElement(VlangTokenType.})('}')
                  PsiElement(VlangTokenType.})('}')
              MATCH_ARM
                LITERAL
                  PsiElement(VlangTokenType.int)('3')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    LITERAL_VALUE_EXPRESSION
                      TYPE
                        TYPE_MODIFIERS
                          <empty list>
                        TYPE_REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('BoolExpr')
                      PsiElement(VlangTokenType.{)('{')
                      PsiElement(VlangTokenType.})('}')
                  PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_typeof_on_sumtypes_of_structs')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('fexpr')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('fexpr')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('2')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('c')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('fexpr')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('3')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('d')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('ExprType')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL_VALUE_EXPRESSION
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('UnaryExpr')
                    PsiElement(VlangTokenType.{)('{')
                    PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('UnaryExpr')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('BinExpr')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('c')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('BoolExpr')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('d')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('UnaryExpr')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('UnaryExpr')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('BinExpr')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('c')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('BoolExpr')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('d')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('UnaryExpr')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('myfn')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('i')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('int')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('i')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('myfn2')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('myfn3')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('i')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('s')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('u8')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('u8')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('myfn4')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('i8')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        UNARY_EXPR
          PsiElement(VlangTokenType.-)('-')
          LITERAL
            PsiElement(VlangTokenType.int)('1')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_typeof_on_fn')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('myfn')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('fn (int) int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('myfn2')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('fn ()')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('myfn3')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('fn (int, string) u8')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('myfn4')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('fn () i8')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('myfn')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('myfn')
            PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              UNARY_EXPR
                PsiElement(VlangTokenType.&)('&')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('myfn')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('&fn (int) int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('myfn2')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('myfn2')
            PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('myfn3')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('myfn3')
            PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            TYPE_OF_CALL_EXPR
              PsiElement(VlangTokenType.typeof)('typeof')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('myfn4')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.==)('==')
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('myfn4')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('type_name')
    GENERIC_PARAMETERS
      PsiElement(VlangTokenType.<)('<')
      GENERIC_PARAMETER_LIST
        GENERIC_PARAMETER
          PsiElement(VlangTokenType.identifier)('T')
      PsiElement(VlangTokenType.>)('>')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('v')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('T')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('v')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType..)('.')
          PsiElement(VlangTokenType.identifier)('name')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('array_item_type')
    GENERIC_PARAMETERS
      PsiElement(VlangTokenType.<)('<')
      GENERIC_PARAMETER_LIST
        GENERIC_PARAMETER
          PsiElement(VlangTokenType.identifier)('T')
      PsiElement(VlangTokenType.>)('>')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('v')
          ARRAY_TYPE
            TYPE_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.[)('[')
            PsiElement(VlangTokenType.])(']')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('T')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          TYPE_OF_CALL_EXPR
            PsiElement(VlangTokenType.typeof)('typeof')
            PsiElement(VlangTokenType.()('(')
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('v')
              PsiElement(VlangTokenType.[)('[')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType..)('.')
          PsiElement(VlangTokenType.identifier)('name')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_generic_type')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('v')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL
            PsiElement(VlangTokenType.int)('5')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('v')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert type_name(&v) == '&int'')
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert type_name(')
        VlangDocLinkReferenceShortImpl(VlangTokenType.<DOC_SHORT_REFERENCE_LINK>)
          VlangDocLinkLabelImpl(VlangTokenType.<DOC_LINK_LABEL>)
            PsiElement(VlangTokenType.<DOC_DATA>)('[v]')
        PsiElement(VlangTokenType.<DOC_DATA>)('!) == '')
        VlangDocLinkReferenceShortImpl(VlangTokenType.<DOC_SHORT_REFERENCE_LINK>)
          VlangDocLinkLabelImpl(VlangTokenType.<DOC_LINK_LABEL>)
            PsiElement(VlangTokenType.<DOC_DATA>)('[1]')
        PsiElement(VlangTokenType.<DOC_DATA>)('int'')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  ARRAY_CREATION
                    PsiElement(VlangTokenType.[)('[')
                    ARRAY_CREATION_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('v')
                    PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[]int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  ARRAY_CREATION
                    PsiElement(VlangTokenType.[)('[')
                    ARRAY_CREATION_LIST
                      ARRAY_CREATION
                        PsiElement(VlangTokenType.[)('[')
                        ARRAY_CREATION_LIST
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('v')
                        PsiElement(VlangTokenType.])(']')
                    PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[][]int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('type_name')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL_VALUE_EXPRESSION
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('FooBar')
                    PsiElement(VlangTokenType.{)('{')
                    PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('FooBar')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('array_item_type')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  ARRAY_CREATION
                    PsiElement(VlangTokenType.[)('[')
                    ARRAY_CREATION_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('v')
                    PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('array_item_type')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  ARRAY_CREATION
                    PsiElement(VlangTokenType.[)('[')
                    ARRAY_CREATION_LIST
                      ARRAY_CREATION
                        PsiElement(VlangTokenType.[)('[')
                        ARRAY_CREATION_LIST
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('v')
                        PsiElement(VlangTokenType.])(']')
                    PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('[]int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert array_item_type(')
        VlangDocLinkReferenceShortImpl(VlangTokenType.<DOC_SHORT_REFERENCE_LINK>)
          VlangDocLinkLabelImpl(VlangTokenType.<DOC_LINK_LABEL>)
            PsiElement(VlangTokenType.<DOC_DATA>)('[&v]')
        PsiElement(VlangTokenType.<DOC_DATA>)(') == '&int'')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('variadic_int')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType....)('...')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        TYPE_OF_CALL_EXPR
          PsiElement(VlangTokenType.typeof)('typeof')
          PsiElement(VlangTokenType.()('(')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('variadic_bool')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType....)('...')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('bool')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        TYPE_OF_CALL_EXPR
          PsiElement(VlangTokenType.typeof)('typeof')
          PsiElement(VlangTokenType.()('(')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('variadic_f64')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType....)('...')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('f64')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        TYPE_OF_CALL_EXPR
          PsiElement(VlangTokenType.typeof)('typeof')
          PsiElement(VlangTokenType.()('(')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_variadic_type')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('variadic_int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('2')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('3')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('...int')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('variadic_bool')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.true)('true')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.false)('false')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('...bool')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('variadic_f64')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.float)('3.1')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.float)('3.2')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('...f64')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiElement(VlangTokenType.})('}')