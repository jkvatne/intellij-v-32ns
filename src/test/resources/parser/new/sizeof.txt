V Language file
  IMPORT_LIST
    IMPORT_DECLARATION
      PsiElement(VlangTokenType.import)('import')
      IMPORT_SPEC
        IMPORT_PATH
          IMPORT_NAME
            PsiElement(VlangTokenType.identifier)('math')
    IMPORT_DECLARATION
      PsiElement(VlangTokenType.import)('import')
      IMPORT_SPEC
        IMPORT_PATH
          IMPORT_NAME
            PsiElement(VlangTokenType.identifier)('flag')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('S1')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('p')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('voidptr')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('S2')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('i')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_math_sizeof')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('r')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('math')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('f32_from_bits')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  SIZE_OF_CALL_EXPR
                    PsiElement(VlangTokenType.sizeof)('sizeof')
                    PsiElement(VlangTokenType.()('(')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('int')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        AND_EXPR
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('r')
            PsiElement(VlangTokenType.>)('>')
            LITERAL
              PsiElement(VlangTokenType.float)('5.6e-45')
          PsiElement(VlangTokenType.&&)('&&')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('r')
            PsiElement(VlangTokenType.<)('<')
            LITERAL
              PsiElement(VlangTokenType.float)('5.7e-45')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_sizeof')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('rune')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('4')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            GENERIC_ARGUMENTS
              PsiElement(VlangTokenType.[)('[')
              TYPE_LIST_NO_PIN
                FIXED_SIZE_ARRAY_TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  PsiElement(VlangTokenType.[)('[')
                  LITERAL
                    PsiElement(VlangTokenType.int)('44')
                  PsiElement(VlangTokenType.])(']')
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('u8')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('44')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            PsiElement(VlangTokenType.()('(')
            LITERAL
              PsiElement(VlangTokenType.char)('`â‚¬`')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('4')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('depends on -m32/64')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        IN_EXPRESSION
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            GENERIC_ARGUMENTS
              PsiElement(VlangTokenType.[)('[')
              TYPE_LIST_NO_PIN
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('S1')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.in)('in')
          ARRAY_CREATION
            PsiElement(VlangTokenType.[)('[')
            ARRAY_CREATION_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      LITERAL
                        PsiElement(VlangTokenType.int)('4')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.,)(',')
              LITERAL
                PsiElement(VlangTokenType.int)('8')
            PsiElement(VlangTokenType.])(']')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('s')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('S2')
            PsiElement(VlangTokenType.{)('{')
            PsiElement(VlangTokenType.})('}')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('s')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('i')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('4')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('flag')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('Flag')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.>)('>')
          LITERAL
            PsiElement(VlangTokenType.int)('4')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            PsiElement(VlangTokenType.()('(')
            STRING_LITERAL
              STRING_TEMPLATE
                PsiElement(VlangTokenType.OPEN_QUOTE)('c'')
                PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('hello')
                PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('6')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            PsiElement(VlangTokenType.()('(')
            STRING_LITERAL
              PsiElement(VlangTokenType.raw_string)('r'hello'')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('16')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          SIZE_OF_CALL_EXPR
            PsiElement(VlangTokenType.sizeof)('sizeof')
            PsiElement(VlangTokenType.()('(')
            STRING_LITERAL
              STRING_TEMPLATE
                PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('hello')
                PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('16')
      PsiElement(VlangTokenType.})('}')