V Language file
  MODULE_CLAUSE
    PsiElement(VlangTokenType.module)('module')
    PsiElement(VlangTokenType.identifier)('new')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('S1')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('p')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('voidptr')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('S2')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('i')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('S3')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('x')
          POINTER_TYPE
            TYPE_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.&)('&')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('S2')
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('y')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('S4')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('x')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('S2')
      FIELDS_GROUP
        MEMBER_MODIFIERS
          MEMBER_MODIFIER
            PsiElement(VlangTokenType.mut)('mut')
          PsiElement(VlangTokenType.:)(':')
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('y')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('f64')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('S5')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          EMBEDDED_DEFINITION
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('S3')
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('a')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('f32')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_isreftype')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('S1')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.true)('true')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('S2')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.false)('false')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('S3')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.true)('true')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('S4')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.false)('false')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('S5')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.true)('true')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            GENERIC_ARGUMENTS
              PsiElement(VlangTokenType.[)('[')
              TYPE_LIST_NO_PIN
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f64')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.false)('false')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            GENERIC_ARGUMENTS
              PsiElement(VlangTokenType.[)('[')
              TYPE_LIST_NO_PIN
                ARRAY_TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  PsiElement(VlangTokenType.[)('[')
                  PsiElement(VlangTokenType.])(']')
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('f64')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.true)('true')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            GENERIC_ARGUMENTS
              PsiElement(VlangTokenType.[)('[')
              TYPE_LIST_NO_PIN
                FIXED_SIZE_ARRAY_TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  PsiElement(VlangTokenType.[)('[')
                  LITERAL
                    PsiElement(VlangTokenType.int)('3')
                  PsiElement(VlangTokenType.])(']')
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('int')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.false)('false')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('check_ref')
    GENERIC_PARAMETERS
      PsiElement(VlangTokenType.<)('<')
      GENERIC_PARAMETER_LIST
        GENERIC_PARAMETER
          PsiElement(VlangTokenType.identifier)('T')
      PsiElement(VlangTokenType.>)('>')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            IS_REF_TYPE_CALL_EXPR
              PsiElement(VlangTokenType.isreftype)('isreftype')
              PsiElement(VlangTokenType.()('(')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('T')
              PsiElement(VlangTokenType.))(')')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                STRING_LITERAL
                  STRING_TEMPLATE
                    PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                    PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('ref')
                    PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                RETURN_STATEMENT
                  PsiElement(VlangTokenType.return)('return')
                  STRING_LITERAL
                    STRING_TEMPLATE
                      PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                      PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('no ref')
                      PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_generic_ref')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_ref')
            GENERIC_ARGUMENTS
              PsiElement(VlangTokenType.<)('<')
              TYPE_LIST_NO_PIN
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f64')
              PsiElement(VlangTokenType.>)('>')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('no ref')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_ref')
            GENERIC_ARGUMENTS
              PsiElement(VlangTokenType.<)('<')
              TYPE_LIST_NO_PIN
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('S3')
              PsiElement(VlangTokenType.>)('>')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('ref')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_expression_ref')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('S3')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('x')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                UNARY_EXPR
                  PsiElement(VlangTokenType.&)('&')
                  LITERAL_VALUE_EXPRESSION
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('S2')
                    PsiElement(VlangTokenType.{)('{')
                    PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('S4')
            PsiElement(VlangTokenType.{)('{')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('c')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            LITERAL
              PsiElement(VlangTokenType.float)('32.5')
            PsiElement(VlangTokenType.*)('*')
            LITERAL
              PsiElement(VlangTokenType.int)('6')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.true)('true')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.false)('false')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          IS_REF_TYPE_CALL_EXPR
            PsiElement(VlangTokenType.isreftype)('isreftype')
            PsiElement(VlangTokenType.()('(')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('c')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.false)('false')
      PsiElement(VlangTokenType.})('}')