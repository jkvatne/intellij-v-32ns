V Language file
  MODULE_CLAUSE
    PsiElement(VlangTokenType.module)('module')
    PsiElement(VlangTokenType.identifier)('new')
  IMPORT_LIST
    IMPORT_DECLARATION
      PsiElement(VlangTokenType.import)('import')
      IMPORT_SPEC
        IMPORT_PATH
          IMPORT_NAME
            PsiElement(VlangTokenType.identifier)('gx')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('main')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            IS_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('book')
              PsiElement(VlangTokenType.is)('is')
              FUNCTION_TYPE
                TYPE_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.fn)('fn')
                SIGNATURE
                  PARAMETERS
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('book')
              PsiElement(VlangTokenType.==)('==')
              LITERAL_VALUE_EXPRESSION
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('Book')
                PsiElement(VlangTokenType.{)('{')
                PsiElement(VlangTokenType.})('}')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            IS_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('book')
              PsiElement(VlangTokenType.is)('is')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('Book')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('author')
              PsiElement(VlangTokenType.==)('==')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('name')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                VAR_DECLARATION
                  VAR_DEFINITION
                    VAR_MODIFIERS
                      <empty list>
                    PsiElement(VlangTokenType.identifier)('hello')
                  PsiElement(VlangTokenType.:=)(':=')
                  LITERAL
                    PsiElement(VlangTokenType.int)('100')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('name')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL
            PsiElement(VlangTokenType.int)('100')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          MATCH_EXPRESSION
            PsiElement(VlangTokenType.match)('match')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('name')
            PsiElement(VlangTokenType.{)('{')
            MATCH_ARMS
              MATCH_ARM
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('Book')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('println')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
              MATCH_ARM
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('Book')
                PsiElement(VlangTokenType.,)(',')
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('Book')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  PsiElement(VlangTokenType.})('}')
              MATCH_ELSE_ARM_CLAUSE
                PsiElement(VlangTokenType.else)('else')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          MATCH_EXPRESSION
            PsiElement(VlangTokenType.match)('match')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('kind')
            PsiElement(VlangTokenType.{)('{')
            MATCH_ARMS
              MATCH_ARM
                ENUM_FETCH
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('points')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    LITERAL_VALUE_EXPRESSION
                      TYPE
                        TYPE_MODIFIERS
                          <empty list>
                        TYPE_REFERENCE_EXPRESSION
                          TYPE_REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('gx')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('TextCfg')
                      PsiElement(VlangTokenType.{)('{')
                      PsiElement(VlangTokenType.})('}')
                  PsiElement(VlangTokenType.})('}')
              MATCH_ARM
                ENUM_FETCH
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('moves')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    LITERAL_VALUE_EXPRESSION
                      TYPE
                        TYPE_MODIFIERS
                          <empty list>
                        TYPE_REFERENCE_EXPRESSION
                          TYPE_REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('gx')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('TextCfg')
                      PsiElement(VlangTokenType.{)('{')
                      PsiElement(VlangTokenType.})('}')
                  PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('possible_moves')
          PsiElement(VlangTokenType.:=)(':=')
          ARRAY_CREATION
            PsiElement(VlangTokenType.[)('[')
            ARRAY_CREATION_LIST
              LITERAL
                PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.,)(',')
              LITERAL
                PsiElement(VlangTokenType.int)('2')
              PsiElement(VlangTokenType.,)(',')
              LITERAL
                PsiElement(VlangTokenType.int)('3')
            PsiElement(VlangTokenType.])(']')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        RANGE_CLAUSE
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('move_idx')
          PsiElement(VlangTokenType.in)('in')
          RANGE_EXPR
            LITERAL
              PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType...)('..')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('possible_moves')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              LITERAL
                PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('write8')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MATCH_EXPRESSION
                    PsiElement(VlangTokenType.match)('match')
                    LITERAL
                      PsiElement(VlangTokenType.true)('true')
                    PsiElement(VlangTokenType.{)('{')
                    MATCH_ARMS
                      MATCH_ARM
                        AND_EXPR
                          CONDITIONAL_EXPR
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('size')
                            PsiElement(VlangTokenType.==)('==')
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                          PsiElement(VlangTokenType.&&)('&&')
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('is_signed')
                        BLOCK
                          PsiElement(VlangTokenType.{)('{')
                          SIMPLE_STATEMENT
                            LEFT_HAND_EXPR_LIST
                              LITERAL
                                PsiElement(VlangTokenType.hex)('0xbe')
                          PsiElement(VlangTokenType.})('}')
                      MATCH_ELSE_ARM_CLAUSE
                        PsiElement(VlangTokenType.else)('else')
                        BLOCK
                          PsiElement(VlangTokenType.{)('{')
                          SIMPLE_STATEMENT
                            LEFT_HAND_EXPR_LIST
                              LITERAL
                                PsiElement(VlangTokenType.hex)('0x8b')
                          PsiElement(VlangTokenType.})('}')
                    PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          MATCH_EXPRESSION
            PsiElement(VlangTokenType.match)('match')
            MAP_INIT_EXPR
              PsiElement(VlangTokenType.{)('{')
              KEY_VALUES
                KEY_VALUE
                  STRING_LITERAL
                    STRING_TEMPLATE
                      PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                      PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('name')
                      PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.:)(':')
                  LITERAL
                    PsiElement(VlangTokenType.int)('100')
              PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.{)('{')
            MATCH_ARMS
              MATCH_ARM
                MAP_TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  PsiElement(VlangTokenType.identifier)('map')
                  PsiElement(VlangTokenType.[)('[')
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('string')
                  PsiElement(VlangTokenType.])(']')
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('int')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  PsiElement(VlangTokenType.})('}')
              MATCH_ARM
                FUNCTION_TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  PsiElement(VlangTokenType.fn)('fn')
                  SIGNATURE
                    PARAMETERS
                      PsiElement(VlangTokenType.()('(')
                      PsiElement(VlangTokenType.))(')')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  PsiElement(VlangTokenType.})('}')
              MATCH_ELSE_ARM_CLAUSE
                PsiElement(VlangTokenType.else)('else')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          MATCH_EXPRESSION
            PsiElement(VlangTokenType.match)('match')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Book')
            PsiElement(VlangTokenType.{)('{')
            MATCH_ARMS
              MATCH_ARM
                MAP_TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  PsiElement(VlangTokenType.identifier)('map')
                  PsiElement(VlangTokenType.[)('[')
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('string')
                  PsiElement(VlangTokenType.])(']')
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('int')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  PsiElement(VlangTokenType.})('}')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          MAP_INIT_EXPR
            PsiElement(VlangTokenType.{)('{')
            KEY_VALUES
              KEY_VALUE
                STRING_LITERAL
                  STRING_TEMPLATE
                    PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                    PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('name')
                    PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                PsiElement(VlangTokenType.:)(':')
                LITERAL
                  PsiElement(VlangTokenType.int)('100')
            PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')