V Language file
  MODULE_CLAUSE
    PsiElement(VlangTokenType.module)('module')
    PsiElement(VlangTokenType.identifier)('strings')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('#-js')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('use levenshtein distance algorithm to calculate')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('the distance between between two strings (lower is closer)')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('levenshtein_distance')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('a')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('int')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('f')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              ARRAY_CREATION
                PsiElement(VlangTokenType.[)('[')
                ARRAY_CREATION_LIST
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('repeat')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  ADD_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('b')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.+)('+')
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.))(')')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        RANGE_CLAUSE
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('j')
          PsiElement(VlangTokenType.in)('in')
          RANGE_EXPR
            LITERAL
              PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType...)('..')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('f')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('f')
                PsiElement(VlangTokenType.[)('[')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('j')
                PsiElement(VlangTokenType.])(']')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('j')
          PsiElement(VlangTokenType.})('}')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        RANGE_CLAUSE
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('ca')
          PsiElement(VlangTokenType.in)('in')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  VAR_MODIFIER
                    PsiElement(VlangTokenType.mut)('mut')
                PsiElement(VlangTokenType.identifier)('j')
              PsiElement(VlangTokenType.:=)(':=')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  VAR_MODIFIER
                    PsiElement(VlangTokenType.mut)('mut')
                PsiElement(VlangTokenType.identifier)('fj1')
              PsiElement(VlangTokenType.:=)(':=')
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('f')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              INC_DEC_EXPRESSION
                INDEX_OR_SLICE_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f')
                  PsiElement(VlangTokenType.[)('[')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                  PsiElement(VlangTokenType.])(']')
                PsiElement(VlangTokenType.++)('++')
          FOR_STATEMENT
            PsiElement(VlangTokenType.for)('for')
            RANGE_CLAUSE
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('cb')
              PsiElement(VlangTokenType.in)('in')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                VAR_DECLARATION
                  VAR_DEFINITION
                    VAR_MODIFIERS
                      VAR_MODIFIER
                        PsiElement(VlangTokenType.mut)('mut')
                    PsiElement(VlangTokenType.identifier)('mn')
                  PsiElement(VlangTokenType.:=)(':=')
                  IF_EXPRESSION
                    PsiElement(VlangTokenType.if)('if')
                    CONDITIONAL_EXPR
                      ADD_EXPR
                        INDEX_OR_SLICE_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('f')
                          PsiElement(VlangTokenType.[)('[')
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('j')
                          PsiElement(VlangTokenType.])(']')
                        PsiElement(VlangTokenType.+)('+')
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                      PsiElement(VlangTokenType.<=)('<=')
                      ADD_EXPR
                        INDEX_OR_SLICE_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('f')
                          PsiElement(VlangTokenType.[)('[')
                          ADD_EXPR
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('j')
                            PsiElement(VlangTokenType.-)('-')
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                          PsiElement(VlangTokenType.])(']')
                        PsiElement(VlangTokenType.+)('+')
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      SIMPLE_STATEMENT
                        LEFT_HAND_EXPR_LIST
                          ADD_EXPR
                            INDEX_OR_SLICE_EXPR
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('f')
                              PsiElement(VlangTokenType.[)('[')
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('j')
                              PsiElement(VlangTokenType.])(']')
                            PsiElement(VlangTokenType.+)('+')
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                      PsiElement(VlangTokenType.})('}')
                    ELSE_BRANCH
                      PsiElement(VlangTokenType.else)('else')
                      BLOCK
                        PsiElement(VlangTokenType.{)('{')
                        SIMPLE_STATEMENT
                          LEFT_HAND_EXPR_LIST
                            ADD_EXPR
                              INDEX_OR_SLICE_EXPR
                                REFERENCE_EXPRESSION
                                  PsiElement(VlangTokenType.identifier)('f')
                                PsiElement(VlangTokenType.[)('[')
                                ADD_EXPR
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('j')
                                  PsiElement(VlangTokenType.-)('-')
                                  LITERAL
                                    PsiElement(VlangTokenType.int)('1')
                                PsiElement(VlangTokenType.])(']')
                              PsiElement(VlangTokenType.+)('+')
                              LITERAL
                                PsiElement(VlangTokenType.int)('1')
                        PsiElement(VlangTokenType.})('}')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  IF_EXPRESSION
                    PsiElement(VlangTokenType.if)('if')
                    CONDITIONAL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('cb')
                      PsiElement(VlangTokenType.!=)('!=')
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('ca')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      ASSIGNMENT_STATEMENT
                        LEFT_HAND_EXPR_LIST
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('mn')
                        ASSIGN_OP
                          PsiElement(VlangTokenType.=)('=')
                        IF_EXPRESSION
                          PsiElement(VlangTokenType.if)('if')
                          CONDITIONAL_EXPR
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('mn')
                            PsiElement(VlangTokenType.<=)('<=')
                            ADD_EXPR
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('fj1')
                              PsiElement(VlangTokenType.+)('+')
                              LITERAL
                                PsiElement(VlangTokenType.int)('1')
                          BLOCK
                            PsiElement(VlangTokenType.{)('{')
                            SIMPLE_STATEMENT
                              LEFT_HAND_EXPR_LIST
                                REFERENCE_EXPRESSION
                                  PsiElement(VlangTokenType.identifier)('mn')
                            PsiElement(VlangTokenType.})('}')
                          ELSE_BRANCH
                            PsiElement(VlangTokenType.else)('else')
                            BLOCK
                              PsiElement(VlangTokenType.{)('{')
                              SIMPLE_STATEMENT
                                LEFT_HAND_EXPR_LIST
                                  ADD_EXPR
                                    REFERENCE_EXPRESSION
                                      PsiElement(VlangTokenType.identifier)('fj1')
                                    PsiElement(VlangTokenType.+)('+')
                                    LITERAL
                                      PsiElement(VlangTokenType.int)('1')
                              PsiElement(VlangTokenType.})('}')
                      PsiElement(VlangTokenType.})('}')
                    ELSE_BRANCH
                      PsiElement(VlangTokenType.else)('else')
                      BLOCK
                        PsiElement(VlangTokenType.{)('{')
                        ASSIGNMENT_STATEMENT
                          LEFT_HAND_EXPR_LIST
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('mn')
                          ASSIGN_OP
                            PsiElement(VlangTokenType.=)('=')
                          IF_EXPRESSION
                            PsiElement(VlangTokenType.if)('if')
                            CONDITIONAL_EXPR
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('mn')
                              PsiElement(VlangTokenType.<=)('<=')
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('fj1')
                            BLOCK
                              PsiElement(VlangTokenType.{)('{')
                              SIMPLE_STATEMENT
                                LEFT_HAND_EXPR_LIST
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('mn')
                              PsiElement(VlangTokenType.})('}')
                            ELSE_BRANCH
                              PsiElement(VlangTokenType.else)('else')
                              BLOCK
                                PsiElement(VlangTokenType.{)('{')
                                SIMPLE_STATEMENT
                                  LEFT_HAND_EXPR_LIST
                                    REFERENCE_EXPRESSION
                                      PsiElement(VlangTokenType.identifier)('fj1')
                                PsiElement(VlangTokenType.})('}')
                        PsiElement(VlangTokenType.})('}')
              ASSIGNMENT_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('fj1')
                ASSIGN_OP
                  PsiElement(VlangTokenType.=)('=')
                INDEX_OR_SLICE_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f')
                  PsiElement(VlangTokenType.[)('[')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('j')
                  PsiElement(VlangTokenType.])(']')
              ASSIGNMENT_STATEMENT
                LEFT_HAND_EXPR_LIST
                  INDEX_OR_SLICE_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('f')
                    PsiElement(VlangTokenType.[)('[')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('j')
                    PsiElement(VlangTokenType.])(']')
                ASSIGN_OP
                  PsiElement(VlangTokenType.=)('=')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('mn')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  INC_DEC_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('j')
                    PsiElement(VlangTokenType.++)('++')
              PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        INDEX_OR_SLICE_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('f')
          PsiElement(VlangTokenType.[)('[')
          ADD_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('f')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
            PsiElement(VlangTokenType.-)('-')
            LITERAL
              PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.])(']')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('use levenshtein distance algorithm to calculate')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('how similar two strings are as a percentage (higher is closer)')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('levenshtein_distance_percentage')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('a')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('f32')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('d')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('levenshtein_distance')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('l')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.>=)('>=')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('b')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        MUL_EXPR
          PARENTHESES_EXPR
            PsiElement(VlangTokenType.()('(')
            ADD_EXPR
              LITERAL
                PsiElement(VlangTokenType.float)('1.00')
              PsiElement(VlangTokenType.-)('-')
              MUL_EXPR
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f32')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('d')
                    PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType./)('/')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f32')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('l')
                    PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.*)('*')
          LITERAL
            PsiElement(VlangTokenType.float)('100.00')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('implementation of Sørensen–Dice coefficient.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('find the similarity between two strings.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('returns coefficient between 0.0 (not similar) and 1.0 (exact match).')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('dice_coefficient')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('s1')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('s2')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('f32')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            OR_EXPR
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('s1')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.==)('==')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.||)('||')
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('s2')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.==)('==')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.float)('0.0')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('s1')
              PsiElement(VlangTokenType.==)('==')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('s2')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.float)('1.0')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            OR_EXPR
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('s1')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.<)('<')
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
              PsiElement(VlangTokenType.||)('||')
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('s2')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.<)('<')
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.float)('0.0')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('s1')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.>)('>')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('s2')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('s1')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('s2')
                PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.==)('==')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('s1')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('s2')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('s1')
                PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('first_bigrams')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            MAP_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.identifier)('map')
              PsiElement(VlangTokenType.[)('[')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('string')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('int')
            PsiElement(VlangTokenType.{)('{')
            PsiElement(VlangTokenType.})('}')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        RANGE_CLAUSE
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('i')
          PsiElement(VlangTokenType.in)('in')
          RANGE_EXPR
            LITERAL
              PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType...)('..')
            ADD_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.-)('-')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('bigram')
              PsiElement(VlangTokenType.:=)(':=')
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType.[)('[')
                RANGE_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('i')
                  PsiElement(VlangTokenType...)('..')
                  ADD_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('i')
                    PsiElement(VlangTokenType.+)('+')
                    LITERAL
                      PsiElement(VlangTokenType.int)('2')
                PsiElement(VlangTokenType.])(']')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('q')
              PsiElement(VlangTokenType.:=)(':=')
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                IN_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('bigram')
                  PsiElement(VlangTokenType.in)('in')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('first_bigrams')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      ADD_EXPR
                        INDEX_OR_SLICE_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('first_bigrams')
                          PsiElement(VlangTokenType.[)('[')
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('bigram')
                          PsiElement(VlangTokenType.])(']')
                        PsiElement(VlangTokenType.+)('+')
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                  PsiElement(VlangTokenType.})('}')
                ELSE_BRANCH
                  PsiElement(VlangTokenType.else)('else')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                    PsiElement(VlangTokenType.})('}')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('first_bigrams')
                PsiElement(VlangTokenType.[)('[')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('bigram')
                PsiElement(VlangTokenType.])(']')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('q')
          PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('intersection_size')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        RANGE_CLAUSE
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('i')
          PsiElement(VlangTokenType.in)('in')
          RANGE_EXPR
            LITERAL
              PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType...)('..')
            ADD_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.-)('-')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('bigram')
              PsiElement(VlangTokenType.:=)(':=')
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType.[)('[')
                RANGE_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('i')
                  PsiElement(VlangTokenType...)('..')
                  ADD_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('i')
                    PsiElement(VlangTokenType.+)('+')
                    LITERAL
                      PsiElement(VlangTokenType.int)('2')
                PsiElement(VlangTokenType.])(']')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('count')
              PsiElement(VlangTokenType.:=)(':=')
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                IN_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('bigram')
                  PsiElement(VlangTokenType.in)('in')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('first_bigrams')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      INDEX_OR_SLICE_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('first_bigrams')
                        PsiElement(VlangTokenType.[)('[')
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('bigram')
                        PsiElement(VlangTokenType.])(']')
                  PsiElement(VlangTokenType.})('}')
                ELSE_BRANCH
                  PsiElement(VlangTokenType.else)('else')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        LITERAL
                          PsiElement(VlangTokenType.int)('0')
                    PsiElement(VlangTokenType.})('}')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('count')
                  PsiElement(VlangTokenType.>)('>')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      INDEX_OR_SLICE_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('first_bigrams')
                        PsiElement(VlangTokenType.[)('[')
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('bigram')
                        PsiElement(VlangTokenType.])(']')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.=)('=')
                    ADD_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('count')
                      PsiElement(VlangTokenType.-)('-')
                      LITERAL
                        PsiElement(VlangTokenType.int)('1')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      INC_DEC_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('intersection_size')
                        PsiElement(VlangTokenType.++)('++')
                  PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        MUL_EXPR
          PARENTHESES_EXPR
            PsiElement(VlangTokenType.()('(')
            MUL_EXPR
              LITERAL
                PsiElement(VlangTokenType.float)('2.0')
              PsiElement(VlangTokenType.*)('*')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('f32')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('intersection_size')
                  PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType./)('/')
          PARENTHESES_EXPR
            PsiElement(VlangTokenType.()('(')
            ADD_EXPR
              ADD_EXPR
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f32')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('a')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.+)('+')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('f32')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('b')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.-)('-')
              LITERAL
                PsiElement(VlangTokenType.int)('2')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')