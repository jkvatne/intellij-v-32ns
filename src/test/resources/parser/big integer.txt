V Language file
  MODULE_CLAUSE
    PsiElement(VlangTokenType.module)('module')
    PsiElement(VlangTokenType.identifier)('big')
  IMPORT_LIST
    IMPORT_DECLARATION
      PsiElement(VlangTokenType.import)('import')
      IMPORT_SPEC
        IMPORT_PATH
          IMPORT_NAME
            PsiElement(VlangTokenType.identifier)('math')
    IMPORT_DECLARATION
      PsiElement(VlangTokenType.import)('import')
      IMPORT_SPEC
        IMPORT_PATH
          IMPORT_NAME
            PsiElement(VlangTokenType.identifier)('math')
          PsiElement(VlangTokenType..)('.')
          IMPORT_NAME
            PsiElement(VlangTokenType.identifier)('bits')
    IMPORT_DECLARATION
      PsiElement(VlangTokenType.import)('import')
      IMPORT_SPEC
        IMPORT_PATH
          IMPORT_NAME
            PsiElement(VlangTokenType.identifier)('strings')
    IMPORT_DECLARATION
      PsiElement(VlangTokenType.import)('import')
      IMPORT_SPEC
        IMPORT_PATH
          IMPORT_NAME
            PsiElement(VlangTokenType.identifier)('strconv')
  CONST_DECLARATION
    PsiElement(VlangTokenType.const)('const')
    PsiElement(VlangTokenType.()('(')
    CONST_DEFINITION
      PsiElement(VlangTokenType.identifier)('digit_array')
      PsiElement(VlangTokenType.=)('=')
      CALL_EXPR
        REFERENCE_EXPRESSION
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('0123456789abcdefghijklmnopqrstuvwxyz')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
          PsiElement(VlangTokenType..)('.')
          PsiElement(VlangTokenType.identifier)('bytes')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          PsiElement(VlangTokenType.))(')')
    PsiElement(VlangTokenType.))(')')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    VlangDocSetextHeadingImpl(VlangTokenType.<DOC_SETEXT_HEADING>)
      PsiElement(VlangTokenType.<DOC_DATA>)('big.Integer')
      PsiElement(VlangTokenType.<DOC_GAP>)('//')
      PsiElement(VlangTokenType.<DOC_DATA>)('-----------')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('It has the following properties:')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('1. Every "digit" is an integer in the range [0, 2^32).')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('2. The signum can be one of three values: -1, 0, +1 for')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('\t\tnegative, zero, and positive values, respectively.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('3. There should be no leading zeros in the digit array.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('4. The digits are stored in little endian format, that is,')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('\tthe digits with a lower positional value (towards the right')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('\twhen represented as a string) have a lower index, and vice versa.')
  STRUCT_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('Integer')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('digits')
          ARRAY_TYPE
            TYPE_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.[)('[')
            PsiElement(VlangTokenType.])(']')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('u32')
      FIELDS_GROUP
        MEMBER_MODIFIERS
          MEMBER_MODIFIER
            PsiElement(VlangTokenType.pub)('pub')
          PsiElement(VlangTokenType.:)(':')
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('signum')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('is_const')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('bool')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.unsafe)('unsafe')
        PsiElement(VlangTokenType.])(']')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        VAR_MODIFIER
          PsiElement(VlangTokenType.mut)('mut')
      PsiElement(VlangTokenType.identifier)('x')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('free')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('x')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('is_const')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          UNSAFE_EXPRESSION
            PsiElement(VlangTokenType.unsafe)('unsafe')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('x')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('free')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('x')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('clone')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('x')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('clone')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  PsiElement(VlangTokenType.))(')')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('x')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('is_const')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              LITERAL
                PsiElement(VlangTokenType.false)('false')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('int_signum')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('int')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        IF_EXPRESSION
          PsiElement(VlangTokenType.if)('if')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('value')
            PsiElement(VlangTokenType.<)('<')
            LITERAL
              PsiElement(VlangTokenType.int)('0')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                UNARY_EXPR
                  PsiElement(VlangTokenType.-)('-')
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
            PsiElement(VlangTokenType.})('}')
          ELSE_BRANCH
            PsiElement(VlangTokenType.else)('else')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('integer_from_int creates a new ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`big.Integer`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' from the given int value.')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_int')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              ARRAY_CREATION
                PsiElement(VlangTokenType.[)('[')
                ARRAY_CREATION_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('u32')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          CALL_EXPR
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('math')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('abs')
                            ARGUMENT_LIST
                              PsiElement(VlangTokenType.()('(')
                              ELEMENT
                                VALUE
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('value')
                              PsiElement(VlangTokenType.))(')')
                      PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.])(']')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('int_signum')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('value')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('integer_from_u32 creates a new ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`big.Integer`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' from the given u32 value.')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_u32')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              ARRAY_CREATION
                PsiElement(VlangTokenType.[)('[')
                ARRAY_CREATION_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('value')
                PsiElement(VlangTokenType.])(']')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              LITERAL
                PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('integer_from_i64 creates a new ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`big.Integer`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' from the given i64 value.')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_i64')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('i64')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('signum_value')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.<)('<')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  UNARY_EXPR
                    PsiElement(VlangTokenType.-)('-')
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('abs_value')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u64')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MUL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('value')
                    PsiElement(VlangTokenType.*)('*')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('signum_value')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('lower')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('abs_value')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('upper')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MUL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('abs_value')
                    PsiElement(VlangTokenType.>>)('>>')
                    LITERAL
                      PsiElement(VlangTokenType.int)('32')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('upper')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL_VALUE_EXPRESSION
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('Integer')
                  PsiElement(VlangTokenType.{)('{')
                  ELEMENT
                    KEY
                      FIELD_NAME
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType.:)(':')
                    VALUE
                      ARRAY_CREATION
                        PsiElement(VlangTokenType.[)('[')
                        ARRAY_CREATION_LIST
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('lower')
                        PsiElement(VlangTokenType.])(']')
                  ELEMENT
                    KEY
                      FIELD_NAME
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('signum')
                    PsiElement(VlangTokenType.:)(':')
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('signum_value')
                  PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                RETURN_STATEMENT
                  PsiElement(VlangTokenType.return)('return')
                  LITERAL_VALUE_EXPRESSION
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('Integer')
                    PsiElement(VlangTokenType.{)('{')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        ARRAY_CREATION
                          PsiElement(VlangTokenType.[)('[')
                          ARRAY_CREATION_LIST
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('lower')
                            PsiElement(VlangTokenType.,)(',')
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('upper')
                          PsiElement(VlangTokenType.])(']')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('signum')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('signum_value')
                    PsiElement(VlangTokenType.})('}')
                PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('integer_from_u64 creates a new ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`big.Integer`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' from the given u64 value.')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_u64')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u64')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('lower')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MUL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('value')
                    PsiElement(VlangTokenType.&)('&')
                    LITERAL
                      PsiElement(VlangTokenType.hex)('0x00000000ffffffff')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('upper')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MUL_EXPR
                    PARENTHESES_EXPR
                      PsiElement(VlangTokenType.()('(')
                      MUL_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('value')
                        PsiElement(VlangTokenType.&)('&')
                        LITERAL
                          PsiElement(VlangTokenType.hex)('0xffffffff00000000')
                      PsiElement(VlangTokenType.))(')')
                    PsiElement(VlangTokenType.>>)('>>')
                    LITERAL
                      PsiElement(VlangTokenType.int)('32')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('upper')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL_VALUE_EXPRESSION
                  TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('Integer')
                  PsiElement(VlangTokenType.{)('{')
                  ELEMENT
                    KEY
                      FIELD_NAME
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType.:)(':')
                    VALUE
                      ARRAY_CREATION
                        PsiElement(VlangTokenType.[)('[')
                        ARRAY_CREATION_LIST
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('lower')
                        PsiElement(VlangTokenType.])(']')
                  ELEMENT
                    KEY
                      FIELD_NAME
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('signum')
                    PsiElement(VlangTokenType.:)(':')
                    VALUE
                      LITERAL
                        PsiElement(VlangTokenType.int)('1')
                  PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                RETURN_STATEMENT
                  PsiElement(VlangTokenType.return)('return')
                  LITERAL_VALUE_EXPRESSION
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('Integer')
                    PsiElement(VlangTokenType.{)('{')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        ARRAY_CREATION
                          PsiElement(VlangTokenType.[)('[')
                          ARRAY_CREATION_LIST
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('lower')
                            PsiElement(VlangTokenType.,)(',')
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('upper')
                          PsiElement(VlangTokenType.])(']')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('signum')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                    PsiElement(VlangTokenType.})('}')
                PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  STRUCT_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('params')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    STRUCT_TYPE
      PsiElement(VlangTokenType.struct)('struct')
      PsiElement(VlangTokenType.identifier)('IntegerConfig')
      PsiElement(VlangTokenType.{)('{')
      FIELDS_GROUP
        FIELD_DECLARATION
          FIELD_DEFINITION
            PsiElement(VlangTokenType.identifier)('signum')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
          DEFAULT_FIELD_VALUE
            PsiElement(VlangTokenType.=)('=')
            LITERAL
              PsiElement(VlangTokenType.int)('1')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('integer_from_bytes creates a new ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`big.Integer`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' from the given byte array.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('By default, positive integers are assumed.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('If you want a negative integer, use in the following manner:')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`value := big.integer_from_bytes(bytes, signum: -1)`')
  FUNCTION_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_bytes')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('input')
          ARRAY_TYPE
            TYPE_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.[)('[')
            PsiElement(VlangTokenType.])(']')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('u8')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('config')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('IntegerConfig')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Thank you to Miccah (@mcastorina) for this implementation and relevant unit tests.')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('input')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('integer_from_int')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        LITERAL
                          PsiElement(VlangTokenType.int)('0')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('pad input')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('padded_input')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u8')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                ADD_EXPR
                  PARENTHESES_EXPR
                    PsiElement(VlangTokenType.()('(')
                    MUL_EXPR
                      PARENTHESES_EXPR
                        PsiElement(VlangTokenType.()('(')
                        ADD_EXPR
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('input')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('len')
                          PsiElement(VlangTokenType.+)('+')
                          LITERAL
                            PsiElement(VlangTokenType.int)('3')
                        PsiElement(VlangTokenType.))(')')
                      PsiElement(VlangTokenType.&)('&')
                      UNARY_EXPR
                        PsiElement(VlangTokenType.~)('~')
                        LITERAL
                          PsiElement(VlangTokenType.hex)('0x3')
                    PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.-)('-')
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('input')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
            PsiElement(VlangTokenType.,)(',')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('cap')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                MUL_EXPR
                  PARENTHESES_EXPR
                    PsiElement(VlangTokenType.()('(')
                    ADD_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('input')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('len')
                      PsiElement(VlangTokenType.+)('+')
                      LITERAL
                        PsiElement(VlangTokenType.int)('3')
                    PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.&)('&')
                  UNARY_EXPR
                    PsiElement(VlangTokenType.~)('~')
                    LITERAL
                      PsiElement(VlangTokenType.hex)('0x3')
            PsiElement(VlangTokenType.})('}')
      APPEND_STATEMENT
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('padded_input')
        SHIFT_LEFT_OP
          PsiElement(VlangTokenType.<<)('<<')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('input')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('digits')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                MUL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('padded_input')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType./)('/')
                  LITERAL
                    PsiElement(VlangTokenType.int)('4')
            PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('combine every 4 bytes into a u32 and insert into n.digits')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        FOR_CLAUSE
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('i')
              PsiElement(VlangTokenType.:=)(':=')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
          PsiElement(VlangTokenType.;)(';')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('i')
            PsiElement(VlangTokenType.<)('<')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('padded_input')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
          PsiElement(VlangTokenType.;)(';')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('i')
            ASSIGN_OP
              PsiElement(VlangTokenType.+=)('+=')
            LITERAL
              PsiElement(VlangTokenType.int)('4')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('x3')
              PsiElement(VlangTokenType.:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      INDEX_OR_SLICE_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('padded_input')
                        PsiElement(VlangTokenType.[)('[')
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('i')
                        PsiElement(VlangTokenType.])(']')
                  PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('x2')
              PsiElement(VlangTokenType.:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      INDEX_OR_SLICE_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('padded_input')
                        PsiElement(VlangTokenType.[)('[')
                        ADD_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('i')
                          PsiElement(VlangTokenType.+)('+')
                          LITERAL
                            PsiElement(VlangTokenType.int)('1')
                        PsiElement(VlangTokenType.])(']')
                  PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('x1')
              PsiElement(VlangTokenType.:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      INDEX_OR_SLICE_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('padded_input')
                        PsiElement(VlangTokenType.[)('[')
                        ADD_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('i')
                          PsiElement(VlangTokenType.+)('+')
                          LITERAL
                            PsiElement(VlangTokenType.int)('2')
                        PsiElement(VlangTokenType.])(']')
                  PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('x0')
              PsiElement(VlangTokenType.:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      INDEX_OR_SLICE_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('padded_input')
                        PsiElement(VlangTokenType.[)('[')
                        ADD_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('i')
                          PsiElement(VlangTokenType.+)('+')
                          LITERAL
                            PsiElement(VlangTokenType.int)('3')
                        PsiElement(VlangTokenType.])(']')
                  PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('val')
              PsiElement(VlangTokenType.:=)(':=')
              ADD_EXPR
                ADD_EXPR
                  ADD_EXPR
                    PARENTHESES_EXPR
                      PsiElement(VlangTokenType.()('(')
                      SHIFT_LEFT_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('x3')
                        SHIFT_LEFT_OP
                          PsiElement(VlangTokenType.<<)('<<')
                        LITERAL
                          PsiElement(VlangTokenType.int)('24')
                      PsiElement(VlangTokenType.))(')')
                    PsiElement(VlangTokenType.|)('|')
                    PARENTHESES_EXPR
                      PsiElement(VlangTokenType.()('(')
                      SHIFT_LEFT_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('x2')
                        SHIFT_LEFT_OP
                          PsiElement(VlangTokenType.<<)('<<')
                        LITERAL
                          PsiElement(VlangTokenType.int)('16')
                      PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.|)('|')
                  PARENTHESES_EXPR
                    PsiElement(VlangTokenType.()('(')
                    SHIFT_LEFT_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('x1')
                      SHIFT_LEFT_OP
                        PsiElement(VlangTokenType.<<)('<<')
                      LITERAL
                        PsiElement(VlangTokenType.int)('8')
                    PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.|)('|')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('x0')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType.[)('[')
                ADD_EXPR
                  MUL_EXPR
                    PARENTHESES_EXPR
                      PsiElement(VlangTokenType.()('(')
                      ADD_EXPR
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('padded_input')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                        PsiElement(VlangTokenType.-)('-')
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('i')
                      PsiElement(VlangTokenType.))(')')
                    PsiElement(VlangTokenType./)('/')
                    LITERAL
                      PsiElement(VlangTokenType.int)('4')
                  PsiElement(VlangTokenType.-)('-')
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
                PsiElement(VlangTokenType.])(']')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('val')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('digits')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('config')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('integer_from_string creates a new ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`big.Integer`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' from the decimal digits specified in the given string.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('For other bases, use ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`big.integer_from_radix`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' instead.')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_string')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('characters')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.))(')')
      RESULT
        OPTION_TYPE
          TYPE_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.?)('?')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('integer_from_radix')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
            PsiElement(VlangTokenType.,)(',')
            ELEMENT
              VALUE
                LITERAL
                  PsiElement(VlangTokenType.int)('10')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('integer_from_radix creates a new ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`big.Integer`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' from the given string and radix.')
  FUNCTION_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_radix')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('all_characters')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('radix')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        OPTION_TYPE
          TYPE_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.?)('?')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            OR_EXPR
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('radix')
                PsiElement(VlangTokenType.<)('<')
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
              PsiElement(VlangTokenType.||)('||')
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('radix')
                PsiElement(VlangTokenType.>)('>')
                LITERAL
                  PsiElement(VlangTokenType.int)('36')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('error')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        STRING_LITERAL
                          STRING_TEMPLATE
                            PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                            PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Radix must be between 2 and 36 (inclusive)')
                            PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('characters')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('all_characters')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('to_lower')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR_WITH_PROPAGATE
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('validate_string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('characters')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('radix')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.?)('?')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        MATCH_EXPRESSION
          PsiElement(VlangTokenType.match)('match')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('radix')
          PsiElement(VlangTokenType.{)('{')
          MATCH_ARMS
            MATCH_ARM
              LITERAL
                PsiElement(VlangTokenType.int)('2')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('integer_from_special_string')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('characters')
                        PsiElement(VlangTokenType.,)(',')
                        ELEMENT
                          VALUE
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                        PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.})('}')
            MATCH_ARM
              LITERAL
                PsiElement(VlangTokenType.int)('16')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('integer_from_special_string')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('characters')
                        PsiElement(VlangTokenType.,)(',')
                        ELEMENT
                          VALUE
                            LITERAL
                              PsiElement(VlangTokenType.int)('4')
                        PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.})('}')
            MATCH_ELSE_ARM_CLAUSE
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('integer_from_regular_string')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('characters')
                        PsiElement(VlangTokenType.,)(',')
                        ELEMENT
                          VALUE
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('radix')
                        PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('validate_string')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('characters')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('radix')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        OPTION_TYPE
          TYPE_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.?)('?')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('sign_present')
          PsiElement(VlangTokenType.:=)(':=')
          OR_EXPR
            CONDITIONAL_EXPR
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.char)('`+`')
            PsiElement(VlangTokenType.||)('||')
            CONDITIONAL_EXPR
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.char)('`-`')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('start_index')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('sign_present')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    LITERAL
                      PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.})('}')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        FOR_CLAUSE
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('index')
              PsiElement(VlangTokenType.:=)(':=')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('start_index')
          PsiElement(VlangTokenType.;)(';')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('index')
            PsiElement(VlangTokenType.<)('<')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('characters')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
          PsiElement(VlangTokenType.;)(';')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              INC_DEC_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.++)('++')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('digit')
              PsiElement(VlangTokenType.:=)(':=')
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.])(']')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('big')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digit_array')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('index')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('digit')
                  PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('value')
                  PsiElement(VlangTokenType.==)('==')
                  UNARY_EXPR
                    PsiElement(VlangTokenType.-)('-')
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('error')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            STRING_LITERAL
                              STRING_TEMPLATE
                                PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                                PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Invalid character ')
                                SHORT_STRING_TEMPLATE_ENTRY
                                  PsiElement(VlangTokenType.SHORT_TEMPLATE_ENTRY_START)('$')
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('digit')
                                PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                        PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('value')
                  PsiElement(VlangTokenType.>=)('>=')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('radix')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('error')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            STRING_LITERAL
                              STRING_TEMPLATE
                                PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                                PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Invalid character ')
                                SHORT_STRING_TEMPLATE_ENTRY
                                  PsiElement(VlangTokenType.SHORT_TEMPLATE_ENTRY_START)('$')
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('digit')
                                PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)(' for base ')
                                SHORT_STRING_TEMPLATE_ENTRY
                                  PsiElement(VlangTokenType.SHORT_TEMPLATE_ENTRY_START)('$')
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('radix')
                                PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                        PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_special_string')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('characters')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('chunk_size')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('sign_present')
          PsiElement(VlangTokenType.:=)(':=')
          OR_EXPR
            CONDITIONAL_EXPR
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.char)('`+`')
            PsiElement(VlangTokenType.||)('||')
            CONDITIONAL_EXPR
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.char)('`-`')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('sign_present')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  IF_EXPRESSION
                    PsiElement(VlangTokenType.if)('if')
                    CONDITIONAL_EXPR
                      INDEX_OR_SLICE_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('characters')
                        PsiElement(VlangTokenType.[)('[')
                        LITERAL
                          PsiElement(VlangTokenType.int)('0')
                        PsiElement(VlangTokenType.])(']')
                      PsiElement(VlangTokenType.==)('==')
                      LITERAL
                        PsiElement(VlangTokenType.char)('`-`')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      SIMPLE_STATEMENT
                        LEFT_HAND_EXPR_LIST
                          UNARY_EXPR
                            PsiElement(VlangTokenType.-)('-')
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                      PsiElement(VlangTokenType.})('}')
                    ELSE_BRANCH
                      PsiElement(VlangTokenType.else)('else')
                      BLOCK
                        PsiElement(VlangTokenType.{)('{')
                        SIMPLE_STATEMENT
                          LEFT_HAND_EXPR_LIST
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                        PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('start_index')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('sign_present')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    LITERAL
                      PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('big_digits')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('cap')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                ADD_EXPR
                  PARENTHESES_EXPR
                    PsiElement(VlangTokenType.()('(')
                    MUL_EXPR
                      PARENTHESES_EXPR
                        PsiElement(VlangTokenType.()('(')
                        MUL_EXPR
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('characters')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('len')
                          PsiElement(VlangTokenType.*)('*')
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('chunk_size')
                        PsiElement(VlangTokenType.))(')')
                      PsiElement(VlangTokenType.>>)('>>')
                      LITERAL
                        PsiElement(VlangTokenType.int)('5')
                    PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.+)('+')
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('current')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('offset')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        FOR_CLAUSE
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('index')
              PsiElement(VlangTokenType.:=)(':=')
              ADD_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('characters')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.-)('-')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.;)(';')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('index')
            PsiElement(VlangTokenType.>=)('>=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('start_index')
          PsiElement(VlangTokenType.;)(';')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              INC_DEC_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.--)('--')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('digit')
              PsiElement(VlangTokenType.:=)(':=')
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.])(']')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('big')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('digit_array')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('index')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          ELEMENT
                            VALUE
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('digit')
                          PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.))(')')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('current')
            ASSIGN_OP
              PsiElement(VlangTokenType.|=)('|=')
            SHIFT_LEFT_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('value')
              SHIFT_LEFT_OP
                PsiElement(VlangTokenType.<<)('<<')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('offset')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('offset')
            ASSIGN_OP
              PsiElement(VlangTokenType.+=)('+=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('chunk_size')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('offset')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('32')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  APPEND_STATEMENT
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('big_digits')
                    SHIFT_LEFT_OP
                      PsiElement(VlangTokenType.<<)('<<')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('current')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('current')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.=)('=')
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('u32')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            LITERAL
                              PsiElement(VlangTokenType.int)('0')
                        PsiElement(VlangTokenType.))(')')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('offset')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.=)('=')
                    LITERAL
                      PsiElement(VlangTokenType.int)('0')
                  PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Store the accumulated value into the digit array')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('current')
              PsiElement(VlangTokenType.!=)('!=')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              APPEND_STATEMENT
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('big_digits')
                SHIFT_LEFT_OP
                  PsiElement(VlangTokenType.<<)('<<')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('current')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('shrink_tail_zeros')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('big_digits')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('big_digits')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('big_digits')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      LITERAL
                        PsiElement(VlangTokenType.int)('0')
                  PsiElement(VlangTokenType.})('}')
                ELSE_BRANCH
                  PsiElement(VlangTokenType.else)('else')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('signum')
                    PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('integer_from_regular_string')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('characters')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('string')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('radix')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('sign_present')
          PsiElement(VlangTokenType.:=)(':=')
          OR_EXPR
            CONDITIONAL_EXPR
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.char)('`+`')
            PsiElement(VlangTokenType.||)('||')
            CONDITIONAL_EXPR
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.char)('`-`')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('sign_present')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  IF_EXPRESSION
                    PsiElement(VlangTokenType.if)('if')
                    CONDITIONAL_EXPR
                      INDEX_OR_SLICE_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('characters')
                        PsiElement(VlangTokenType.[)('[')
                        LITERAL
                          PsiElement(VlangTokenType.int)('0')
                        PsiElement(VlangTokenType.])(']')
                      PsiElement(VlangTokenType.==)('==')
                      LITERAL
                        PsiElement(VlangTokenType.char)('`-`')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      SIMPLE_STATEMENT
                        LEFT_HAND_EXPR_LIST
                          UNARY_EXPR
                            PsiElement(VlangTokenType.-)('-')
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                      PsiElement(VlangTokenType.})('}')
                    ELSE_BRANCH
                      PsiElement(VlangTokenType.else)('else')
                      BLOCK
                        PsiElement(VlangTokenType.{)('{')
                        SIMPLE_STATEMENT
                          LEFT_HAND_EXPR_LIST
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                        PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('start_index')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('sign_present')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    LITERAL
                      PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('zero_int')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('radix_int')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('integer_from_u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('radix')
              PsiElement(VlangTokenType.))(')')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        FOR_CLAUSE
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('index')
              PsiElement(VlangTokenType.:=)(':=')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('start_index')
          PsiElement(VlangTokenType.;)(';')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('index')
            PsiElement(VlangTokenType.<)('<')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('characters')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
          PsiElement(VlangTokenType.;)(';')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              INC_DEC_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.++)('++')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('digit')
              PsiElement(VlangTokenType.:=)(':=')
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('characters')
                PsiElement(VlangTokenType.[)('[')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.])(']')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('big')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digit_array')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('index')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('digit')
                  PsiElement(VlangTokenType.))(')')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result')
            ASSIGN_OP
              PsiElement(VlangTokenType.*=)('*=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('radix_int')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result')
            ASSIGN_OP
              PsiElement(VlangTokenType.+=)('+=')
            CALL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer_from_int')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('value')
                PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('clone')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  PsiElement(VlangTokenType.))(')')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              MUL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('result')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('signum')
                PsiElement(VlangTokenType.*)('*')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('abs returns the absolute value of the integer.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('abs')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        IF_EXPRESSION
          PsiElement(VlangTokenType.if)('if')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.==)('==')
            LITERAL
              PsiElement(VlangTokenType.int)('0')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
            PsiElement(VlangTokenType.})('}')
          ELSE_BRANCH
            PsiElement(VlangTokenType.else)('else')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  LITERAL_VALUE_EXPRESSION
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('Integer')
                    PsiElement(VlangTokenType.{)('{')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        CALL_EXPR
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('integer')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('digits')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('clone')
                          ARGUMENT_LIST
                            PsiElement(VlangTokenType.()('(')
                            PsiElement(VlangTokenType.))(')')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('signum')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                    PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('neg returns the result of negation of the integer.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('neg')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        IF_EXPRESSION
          PsiElement(VlangTokenType.if)('if')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.==)('==')
            LITERAL
              PsiElement(VlangTokenType.int)('0')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
            PsiElement(VlangTokenType.})('}')
          ELSE_BRANCH
            PsiElement(VlangTokenType.else)('else')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  LITERAL_VALUE_EXPRESSION
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('Integer')
                    PsiElement(VlangTokenType.{)('{')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        CALL_EXPR
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('integer')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('digits')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('clone')
                          ARGUMENT_LIST
                            PsiElement(VlangTokenType.()('(')
                            PsiElement(VlangTokenType.))(')')
                    ELEMENT
                      KEY
                        FIELD_NAME
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('signum')
                      PsiElement(VlangTokenType.:)(':')
                      VALUE
                        UNARY_EXPR
                          PsiElement(VlangTokenType.-)('-')
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('integer')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('signum')
                    PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.+)('+')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('addend')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Quick exits')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('addend')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('clone')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('addend')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('clone')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Non-zero cases')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        IF_EXPRESSION
          PsiElement(VlangTokenType.if)('if')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.==)('==')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('addend')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('signum')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('add')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('addend')
                    PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.})('}')
          ELSE_BRANCH
            PsiElement(VlangTokenType.else)('else')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              PsiComment(VLANG_DOC_COMMENT)
                PsiElement(VlangTokenType.<DOC_GAP>)('//')
                PsiElement(VlangTokenType.<DOC_DATA>)('Unequal signs')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('integer')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('subtract')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('addend')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.-)('-')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('subtrahend')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Quick exits')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('subtrahend')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('neg')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('subtrahend')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('clone')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Non-zero cases')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        IF_EXPRESSION
          PsiElement(VlangTokenType.if)('if')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.==)('==')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('subtrahend')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('signum')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('subtract')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('subtrahend')
                    PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.})('}')
          ELSE_BRANCH
            PsiElement(VlangTokenType.else)('else')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('integer')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('add')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('subtrahend')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('add')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('addend')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('integer')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('digits')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('addend')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('digits')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('storage')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                ADD_EXPR
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('math')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('max')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('a')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('len')
                      PsiElement(VlangTokenType.,)(',')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('b')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('len')
                      PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.+)('+')
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('add_digit_array')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('storage')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('storage')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('subtract')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('subtrahend')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('cmp')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('abs_cmp')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('subtrahend')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('cmp')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.,)(',')
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.:=)(':=')
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('cmp')
              PsiElement(VlangTokenType.>)('>')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('integer')
                  PsiElement(VlangTokenType.,)(',')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('subtrahend')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('subtrahend')
                    PsiElement(VlangTokenType.,)(',')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('storage')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('subtract_digit_array')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('b')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('storage')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              MUL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('cmp')
                PsiElement(VlangTokenType.*)('*')
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('signum')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('storage')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.*)('*')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('multiplicand')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Quick exits')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            OR_EXPR
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('integer')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('signum')
                PsiElement(VlangTokenType.==)('==')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.||)('||')
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('multiplicand')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('signum')
                PsiElement(VlangTokenType.==)('==')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType.==)('==')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('one_int')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('multiplicand')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('clone')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('multiplicand')
              PsiElement(VlangTokenType.==)('==')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('one_int')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('clone')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('The final sign is the product of the signs')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('storage')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                ADD_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('integer')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.+)('+')
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('multiplicand')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('multiply_digit_array')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('multiplicand')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('storage')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              MUL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('integer')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('signum')
                PsiElement(VlangTokenType.*)('*')
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('multiplicand')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('signum')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('storage')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('div_mod returns the quotient and remainder of the integer division.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('div_mod')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('divisor')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TUPLE_TYPE
          TYPE_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.()('(')
          TYPE_LIST_NO_PIN
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('Integer')
            PsiElement(VlangTokenType.,)(',')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Quick exits')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('divisor')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('panic')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          STRING_LITERAL
                            STRING_TEMPLATE
                              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Cannot divide by zero')
                              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
                PsiElement(VlangTokenType.,)(',')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('divisor')
              PsiElement(VlangTokenType.==)('==')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('one_int')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('clone')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.,)(',')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('divisor')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              UNARY_EXPR
                PsiElement(VlangTokenType.-)('-')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                VAR_DECLARATION
                  VAR_DEFINITION
                    VAR_MODIFIERS
                      <empty list>
                    PsiElement(VlangTokenType.identifier)('q')
                  PsiElement(VlangTokenType.,)(',')
                  VAR_DEFINITION
                    VAR_MODIFIERS
                      <empty list>
                    PsiElement(VlangTokenType.identifier)('r')
                  PsiElement(VlangTokenType.:=)(':=')
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('integer')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('div_mod')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          CALL_EXPR
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('divisor')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('neg')
                            ARGUMENT_LIST
                              PsiElement(VlangTokenType.()('(')
                              PsiElement(VlangTokenType.))(')')
                      PsiElement(VlangTokenType.))(')')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('q')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('neg')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.,)(',')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('r')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              UNARY_EXPR
                PsiElement(VlangTokenType.-)('-')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                VAR_DECLARATION
                  VAR_DEFINITION
                    VAR_MODIFIERS
                      <empty list>
                    PsiElement(VlangTokenType.identifier)('q')
                  PsiElement(VlangTokenType.,)(',')
                  VAR_DEFINITION
                    VAR_MODIFIERS
                      <empty list>
                    PsiElement(VlangTokenType.identifier)('r')
                  PsiElement(VlangTokenType.:=)(':=')
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('integer')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('neg')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          PsiElement(VlangTokenType.))(')')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('div_mod')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('divisor')
                      PsiElement(VlangTokenType.))(')')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  IF_EXPRESSION
                    PsiElement(VlangTokenType.if)('if')
                    CONDITIONAL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('r')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('signum')
                      PsiElement(VlangTokenType.==)('==')
                      LITERAL
                        PsiElement(VlangTokenType.int)('0')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      RETURN_STATEMENT
                        PsiElement(VlangTokenType.return)('return')
                        CALL_EXPR
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('q')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('neg')
                          ARGUMENT_LIST
                            PsiElement(VlangTokenType.()('(')
                            PsiElement(VlangTokenType.))(')')
                        PsiElement(VlangTokenType.,)(',')
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('zero_int')
                      PsiElement(VlangTokenType.})('}')
                    ELSE_BRANCH
                      PsiElement(VlangTokenType.else)('else')
                      BLOCK
                        PsiElement(VlangTokenType.{)('{')
                        RETURN_STATEMENT
                          PsiElement(VlangTokenType.return)('return')
                          ADD_EXPR
                            CALL_EXPR
                              REFERENCE_EXPRESSION
                                REFERENCE_EXPRESSION
                                  PsiElement(VlangTokenType.identifier)('q')
                                PsiElement(VlangTokenType..)('.')
                                PsiElement(VlangTokenType.identifier)('neg')
                              ARGUMENT_LIST
                                PsiElement(VlangTokenType.()('(')
                                PsiElement(VlangTokenType.))(')')
                            PsiElement(VlangTokenType.-)('-')
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('one_int')
                          PsiElement(VlangTokenType.,)(',')
                          ADD_EXPR
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('divisor')
                            PsiElement(VlangTokenType.-)('-')
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('r')
                        PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Division for positive integers')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('q')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('cap')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                ADD_EXPR
                  ADD_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('integer')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.-)('-')
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('divisor')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.+)('+')
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('r')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('cap')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('divide_digit_array')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('divisor')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('q')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('r')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('quotient')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('Integer')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                IF_EXPRESSION
                  PsiElement(VlangTokenType.if)('if')
                  CONDITIONAL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('q')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.==)('==')
                    LITERAL
                      PsiElement(VlangTokenType.int)('0')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        LITERAL
                          PsiElement(VlangTokenType.int)('0')
                    PsiElement(VlangTokenType.})('}')
                  ELSE_BRANCH
                    PsiElement(VlangTokenType.else)('else')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      SIMPLE_STATEMENT
                        LEFT_HAND_EXPR_LIST
                          LITERAL
                            PsiElement(VlangTokenType.int)('1')
                      PsiElement(VlangTokenType.})('}')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('q')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('remainder')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('Integer')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                IF_EXPRESSION
                  PsiElement(VlangTokenType.if)('if')
                  CONDITIONAL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('r')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.==)('==')
                    LITERAL
                      PsiElement(VlangTokenType.int)('0')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        LITERAL
                          PsiElement(VlangTokenType.int)('0')
                    PsiElement(VlangTokenType.})('}')
                  ELSE_BRANCH
                    PsiElement(VlangTokenType.else)('else')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      SIMPLE_STATEMENT
                        LEFT_HAND_EXPR_LIST
                          LITERAL
                            PsiElement(VlangTokenType.int)('1')
                      PsiElement(VlangTokenType.})('}')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('r')
            PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('quotient')
        PsiElement(VlangTokenType.,)(',')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('remainder')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType./)('/')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('q')
          PsiElement(VlangTokenType.,)(',')
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('_')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('div_mod')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('q')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.%)('%')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('_')
          PsiElement(VlangTokenType.,)(',')
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('r')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('div_mod')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('r')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('pow returns the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' raised to the power of the u32 ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`exponent`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('pow')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('exponent')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('exponent')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('one_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('exponent')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('clone')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('n')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('exponent')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('y')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('one_int')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('n')
          PsiElement(VlangTokenType.>)('>')
          LITERAL
            PsiElement(VlangTokenType.int)('1')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  MUL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('n')
                    PsiElement(VlangTokenType.&)('&')
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('y')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.*=)('*=')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('x')
                  PsiElement(VlangTokenType.})('}')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('x')
            ASSIGN_OP
              PsiElement(VlangTokenType.*=)('*=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('x')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('n')
            ASSIGN_OP
              PsiElement(VlangTokenType.>>=)('>>=')
            LITERAL
              PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        MUL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType.*)('*')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('y')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('mod_pow returns the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' raised to the power of the u32 ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`exponent`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' modulo the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`divisor`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('mod_pow')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('exponent')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('divisor')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('exponent')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('one_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('exponent')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                MUL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
                  PsiElement(VlangTokenType.%)('%')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('divisor')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('n')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('exponent')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.%)('%')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('divisor')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('y')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('one_int')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('n')
          PsiElement(VlangTokenType.>)('>')
          LITERAL
            PsiElement(VlangTokenType.int)('1')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  MUL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('n')
                    PsiElement(VlangTokenType.&)('&')
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('y')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.*=)('*=')
                    MUL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('x')
                      PsiElement(VlangTokenType.%)('%')
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('divisor')
                  PsiElement(VlangTokenType.})('}')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('x')
            ASSIGN_OP
              PsiElement(VlangTokenType.*=)('*=')
            MUL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('x')
              PsiElement(VlangTokenType.%)('%')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('divisor')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('n')
            ASSIGN_OP
              PsiElement(VlangTokenType.>>=)('>>=')
            LITERAL
              PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        MUL_EXPR
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('x')
            PsiElement(VlangTokenType.*)('*')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('y')
          PsiElement(VlangTokenType.%)('%')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('divisor')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('big_mod_power returns the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' raised to the power of the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`exponent`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' modulo the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`divisor`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('big_mod_pow')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('exponent')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('divisor')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('exponent')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.<)('<')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('panic')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          STRING_LITERAL
                            STRING_TEMPLATE
                              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Exponent needs to be non-negative.')
                              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('exponent')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('one_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('x')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.%)('%')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('divisor')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('y')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('one_int')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('n')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.))(')')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('For all but the last digit of the exponent')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        RANGE_CLAUSE
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('index')
          PsiElement(VlangTokenType.in)('in')
          RANGE_EXPR
            LITERAL
              PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType...)('..')
            ADD_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('exponent')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.-)('-')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('n')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('exponent')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.[)('[')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('index')
              PsiElement(VlangTokenType.])(']')
          FOR_STATEMENT
            PsiElement(VlangTokenType.for)('for')
            RANGE_CLAUSE
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('_')
              PsiElement(VlangTokenType.in)('in')
              RANGE_EXPR
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType...)('..')
                LITERAL
                  PsiElement(VlangTokenType.int)('32')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  IF_EXPRESSION
                    PsiElement(VlangTokenType.if)('if')
                    CONDITIONAL_EXPR
                      MUL_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('n')
                        PsiElement(VlangTokenType.&)('&')
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                      PsiElement(VlangTokenType.==)('==')
                      LITERAL
                        PsiElement(VlangTokenType.int)('1')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      ASSIGNMENT_STATEMENT
                        LEFT_HAND_EXPR_LIST
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('y')
                        ASSIGN_OP
                          PsiElement(VlangTokenType.*=)('*=')
                        MUL_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('x')
                          PsiElement(VlangTokenType.%)('%')
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('divisor')
                      PsiElement(VlangTokenType.})('}')
              ASSIGNMENT_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('x')
                ASSIGN_OP
                  PsiElement(VlangTokenType.*=)('*=')
                MUL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('x')
                  PsiElement(VlangTokenType.%)('%')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('divisor')
              ASSIGNMENT_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('n')
                ASSIGN_OP
                  PsiElement(VlangTokenType.>>=)('>>=')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Last digit of the exponent')
      ASSIGNMENT_STATEMENT
        LEFT_HAND_EXPR_LIST
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('n')
        ASSIGN_OP
          PsiElement(VlangTokenType.=)('=')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('exponent')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('last')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('n')
          PsiElement(VlangTokenType.>)('>')
          LITERAL
            PsiElement(VlangTokenType.int)('1')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  MUL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('n')
                    PsiElement(VlangTokenType.&)('&')
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('y')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.*=)('*=')
                    MUL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('x')
                      PsiElement(VlangTokenType.%)('%')
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('divisor')
                  PsiElement(VlangTokenType.})('}')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('x')
            ASSIGN_OP
              PsiElement(VlangTokenType.*=)('*=')
            MUL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('x')
              PsiElement(VlangTokenType.%)('%')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('divisor')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('n')
            ASSIGN_OP
              PsiElement(VlangTokenType.>>=)('>>=')
            LITERAL
              PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        MUL_EXPR
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('x')
            PsiElement(VlangTokenType.*)('*')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('y')
          PsiElement(VlangTokenType.%)('%')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('divisor')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('inc returns the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' incremented by 1.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        VAR_MODIFIER
          PsiElement(VlangTokenType.mut)('mut')
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('inc')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      ASSIGNMENT_STATEMENT
        LEFT_HAND_EXPR_LIST
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
        ASSIGN_OP
          PsiElement(VlangTokenType.=)('=')
        ADD_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.+)('+')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('one_int')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('dec returns the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' decremented by 1.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        VAR_MODIFIER
          PsiElement(VlangTokenType.mut)('mut')
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('dec')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      ASSIGNMENT_STATEMENT
        LEFT_HAND_EXPR_LIST
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
        ASSIGN_OP
          PsiElement(VlangTokenType.=)('=')
        ADD_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.-)('-')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('one_int')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.==)('==')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('bool')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        AND_EXPR
          AND_EXPR
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.&&)('&&')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.==)('==')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
          PsiElement(VlangTokenType.&&)('&&')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.==)('==')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('digits')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('abs_cmp returns the result of comparing the magnitudes of the integers ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' and ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`b`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('It returns a negative int if ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`|a| < |b|`')
    PsiElement(VlangTokenType.<DOC_DATA>)(', 0 if ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`|a| == |b|`')
    PsiElement(VlangTokenType.<DOC_DATA>)(', and a positive int if ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`|a| > |b|`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('abs_cmp')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('int')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('compare_digit_array')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.,)(',')
            ELEMENT
              VALUE
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.<)('<')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('bool')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Quick exits based on signum value:')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.<)('<')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.true)('true')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.>)('>')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.false)('false')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('They have equal sign')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('signum')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              PsiComment(VLANG_DOC_COMMENT)
                PsiElement(VlangTokenType.<DOC_GAP>)('//')
                PsiElement(VlangTokenType.<DOC_DATA>)('Are they both zero?')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.false)('false')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('If they are negative, the one with the larger absolute value is smaller')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('cmp')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('abs_cmp')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        IF_EXPRESSION
          PsiElement(VlangTokenType.if)('if')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.<)('<')
            LITERAL
              PsiElement(VlangTokenType.int)('0')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('cmp')
                  PsiElement(VlangTokenType.>)('>')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType.})('}')
          ELSE_BRANCH
            PsiElement(VlangTokenType.else)('else')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CONDITIONAL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('cmp')
                    PsiElement(VlangTokenType.<)('<')
                    LITERAL
                      PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('check_sign')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('a')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.<)('<')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('panic')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          STRING_LITERAL
                            STRING_TEMPLATE
                              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Bitwise operations are only supported for nonnegative integers')
                              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('get_bit checks whether the bit at the given index is set.')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('get_bit')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('i')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('bool')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('target_index')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('i')
            PsiElement(VlangTokenType./)('/')
            LITERAL
              PsiElement(VlangTokenType.int)('32')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('offset')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('i')
            PsiElement(VlangTokenType.%)('%')
            LITERAL
              PsiElement(VlangTokenType.int)('32')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('target_index')
              PsiElement(VlangTokenType.>=)('>=')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.false)('false')
              PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CONDITIONAL_EXPR
          MUL_EXPR
            PARENTHESES_EXPR
              PsiElement(VlangTokenType.()('(')
              MUL_EXPR
                INDEX_OR_SLICE_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType.[)('[')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('target_index')
                  PsiElement(VlangTokenType.])(']')
                PsiElement(VlangTokenType.>>)('>>')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('offset')
              PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.&)('&')
            LITERAL
              PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.!=)('!=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('set_bit sets the bit at the given index to the given value.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        VAR_MODIFIER
          PsiElement(VlangTokenType.mut)('mut')
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('set_bit')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('i')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('bool')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('target_index')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('i')
            PsiElement(VlangTokenType./)('/')
            LITERAL
              PsiElement(VlangTokenType.int)('32')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('offset')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('i')
            PsiElement(VlangTokenType.%)('%')
            LITERAL
              PsiElement(VlangTokenType.int)('32')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('target_index')
              PsiElement(VlangTokenType.>=)('>=')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  IF_EXPRESSION
                    PsiElement(VlangTokenType.if)('if')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('value')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      ASSIGNMENT_STATEMENT
                        LEFT_HAND_EXPR_LIST
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('a')
                        ASSIGN_OP
                          PsiElement(VlangTokenType.=)('=')
                        CALL_EXPR
                          REFERENCE_EXPRESSION
                            CALL_EXPR
                              REFERENCE_EXPRESSION
                                REFERENCE_EXPRESSION
                                  PsiElement(VlangTokenType.identifier)('one_int')
                                PsiElement(VlangTokenType..)('.')
                                PsiElement(VlangTokenType.identifier)('lshift')
                              ARGUMENT_LIST
                                PsiElement(VlangTokenType.()('(')
                                ELEMENT
                                  VALUE
                                    REFERENCE_EXPRESSION
                                      PsiElement(VlangTokenType.identifier)('i')
                                PsiElement(VlangTokenType.))(')')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('bitwise_or')
                          ARGUMENT_LIST
                            PsiElement(VlangTokenType.()('(')
                            ELEMENT
                              VALUE
                                REFERENCE_EXPRESSION
                                  PsiElement(VlangTokenType.identifier)('a')
                            PsiElement(VlangTokenType.))(')')
                      PsiElement(VlangTokenType.})('}')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('copy')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('clone')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('value')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              ASSIGNMENT_STATEMENT
                LEFT_HAND_EXPR_LIST
                  INDEX_OR_SLICE_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('copy')
                    PsiElement(VlangTokenType.[)('[')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('target_index')
                    PsiElement(VlangTokenType.])(']')
                ASSIGN_OP
                  PsiElement(VlangTokenType.|=)('|=')
                SHIFT_LEFT_EXPR
                  LITERAL
                    PsiElement(VlangTokenType.int)('1')
                  SHIFT_LEFT_OP
                    PsiElement(VlangTokenType.<<)('<<')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('offset')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                ASSIGNMENT_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    INDEX_OR_SLICE_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('copy')
                      PsiElement(VlangTokenType.[)('[')
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('target_index')
                      PsiElement(VlangTokenType.])(']')
                  ASSIGN_OP
                    PsiElement(VlangTokenType.&=)('&=')
                  UNARY_EXPR
                    PsiElement(VlangTokenType.~)('~')
                    PARENTHESES_EXPR
                      PsiElement(VlangTokenType.()('(')
                      SHIFT_LEFT_EXPR
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                        SHIFT_LEFT_OP
                          PsiElement(VlangTokenType.<<)('<<')
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('offset')
                      PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.})('}')
      ASSIGNMENT_STATEMENT
        LEFT_HAND_EXPR_LIST
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
        ASSIGN_OP
          PsiElement(VlangTokenType.=)('=')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('copy')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('bitwise_or returns the "bitwise or" of the integers ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' and ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`b`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('bitwise_or')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('math')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('max')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('a')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('digits')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.,)(',')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('b')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('digits')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('bitwise_or_digit_array')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('b')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      LITERAL
                        PsiElement(VlangTokenType.int)('0')
                  PsiElement(VlangTokenType.})('}')
                ELSE_BRANCH
                  PsiElement(VlangTokenType.else)('else')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                    PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('bitwise_and returns the "bitwise and" of the integers ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' and ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`b`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('bitwise_and')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('math')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('max')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('a')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('digits')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.,)(',')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('b')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('digits')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('bitwise_and_digit_array')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('b')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      LITERAL
                        PsiElement(VlangTokenType.int)('0')
                  PsiElement(VlangTokenType.})('}')
                ELSE_BRANCH
                  PsiElement(VlangTokenType.else)('else')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                    PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('bitwise_not returns the "bitwise not" of the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('bitwise_not')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('bitwise_not_digit_array')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      LITERAL
                        PsiElement(VlangTokenType.int)('0')
                  PsiElement(VlangTokenType.})('}')
                ELSE_BRANCH
                  PsiElement(VlangTokenType.else)('else')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                    PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('bitwise_xor returns the "bitwise exclusive or" of the integers ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' and ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`b`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('bitwise_xor')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('check_sign')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('math')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('max')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('a')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('digits')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.,)(',')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('b')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('digits')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('bitwise_xor_digit_array')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('b')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  MUT_EXPRESSION
                    PsiElement(VlangTokenType.mut)('mut')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.==)('==')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      LITERAL
                        PsiElement(VlangTokenType.int)('0')
                  PsiElement(VlangTokenType.})('}')
                ELSE_BRANCH
                  PsiElement(VlangTokenType.else)('else')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        LITERAL
                          PsiElement(VlangTokenType.int)('1')
                    PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('lshift returns the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' shifted left by ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`amount`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' bits.')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('lshift')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('amount')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('amount')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('normalised_amount')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('amount')
            PsiElement(VlangTokenType.&)('&')
            LITERAL
              PsiElement(VlangTokenType.int)('31')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('digit_offset')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MUL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('amount')
                    PsiElement(VlangTokenType.>>)('>>')
                    LITERAL
                      PsiElement(VlangTokenType.int)('5')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('new_array')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                ADD_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('a')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.+)('+')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('digit_offset')
            PsiElement(VlangTokenType.})('}')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        RANGE_CLAUSE
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('index')
          PsiElement(VlangTokenType.in)('in')
          RANGE_EXPR
            LITERAL
              PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType...)('..')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('new_array')
                PsiElement(VlangTokenType.[)('[')
                ADD_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('index')
                  PsiElement(VlangTokenType.+)('+')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('digit_offset')
                PsiElement(VlangTokenType.])(']')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.[)('[')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('index')
              PsiElement(VlangTokenType.])(']')
          PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('normalised_amount')
              PsiElement(VlangTokenType.>)('>')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('shift_digits_left')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('new_array')
                      PsiElement(VlangTokenType.,)(',')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('normalised_amount')
                      PsiElement(VlangTokenType.,)(',')
                      ELEMENT
                        VALUE
                          MUT_EXPRESSION
                            PsiElement(VlangTokenType.mut)('mut')
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('new_array')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('new_array')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('rshift returns the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' shifted right by ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`amount`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' bits.')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('rshift')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('amount')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('amount')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('normalised_amount')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('amount')
            PsiElement(VlangTokenType.&)('&')
            LITERAL
              PsiElement(VlangTokenType.int)('31')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('digit_offset')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MUL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('amount')
                    PsiElement(VlangTokenType.>>)('>>')
                    LITERAL
                      PsiElement(VlangTokenType.int)('5')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('digit_offset')
              PsiElement(VlangTokenType.>=)('>=')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('zero_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('new_array')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u32')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                ADD_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('a')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.-)('-')
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('digit_offset')
            PsiElement(VlangTokenType.})('}')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        RANGE_CLAUSE
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('index')
          PsiElement(VlangTokenType.in)('in')
          RANGE_EXPR
            LITERAL
              PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType...)('..')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('new_array')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('new_array')
                PsiElement(VlangTokenType.[)('[')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.])(']')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType.[)('[')
              ADD_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.+)('+')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digit_offset')
              PsiElement(VlangTokenType.])(']')
          PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('normalised_amount')
              PsiElement(VlangTokenType.>)('>')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('shift_digits_right')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('new_array')
                      PsiElement(VlangTokenType.,)(',')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('normalised_amount')
                      PsiElement(VlangTokenType.,)(',')
                      ELEMENT
                        VALUE
                          MUT_EXPRESSION
                            PsiElement(VlangTokenType.mut)('mut')
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('new_array')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        LITERAL_VALUE_EXPRESSION
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
          PsiElement(VlangTokenType.{)('{')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('new_array')
          ELEMENT
            KEY
              FIELD_NAME
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.:)(':')
            VALUE
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('binary_str returns the binary string representation of the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('binary_str')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('We have the zero integer')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                STRING_LITERAL
                  STRING_TEMPLATE
                    PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                    PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('0')
                    PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Add the sign if present')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('sign_needed')
          PsiElement(VlangTokenType.:=)(':=')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.==)('==')
            UNARY_EXPR
              PsiElement(VlangTokenType.-)('-')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result_builder')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('strings')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('new_builder')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  ADD_EXPR
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('integer')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('bit_len')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        PsiElement(VlangTokenType.))(')')
                    PsiElement(VlangTokenType.+)('+')
                    IF_EXPRESSION
                      PsiElement(VlangTokenType.if)('if')
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('sign_needed')
                      BLOCK
                        PsiElement(VlangTokenType.{)('{')
                        SIMPLE_STATEMENT
                          LEFT_HAND_EXPR_LIST
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                        PsiElement(VlangTokenType.})('}')
                      ELSE_BRANCH
                        PsiElement(VlangTokenType.else)('else')
                        BLOCK
                          PsiElement(VlangTokenType.{)('{')
                          SIMPLE_STATEMENT
                            LEFT_HAND_EXPR_LIST
                              LITERAL
                                PsiElement(VlangTokenType.int)('0')
                          PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('sign_needed')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('result_builder')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('write_string')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          STRING_LITERAL
                            STRING_TEMPLATE
                              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('-')
                              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result_builder')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('write_string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('u32_to_binary_without_lz')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          INDEX_OR_SLICE_EXPR
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('integer')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('digits')
                            PsiElement(VlangTokenType.[)('[')
                            ADD_EXPR
                              REFERENCE_EXPRESSION
                                REFERENCE_EXPRESSION
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('integer')
                                  PsiElement(VlangTokenType..)('.')
                                  PsiElement(VlangTokenType.identifier)('digits')
                                PsiElement(VlangTokenType..)('.')
                                PsiElement(VlangTokenType.identifier)('len')
                              PsiElement(VlangTokenType.-)('-')
                              LITERAL
                                PsiElement(VlangTokenType.int)('1')
                            PsiElement(VlangTokenType.])(']')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.))(')')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        FOR_CLAUSE
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('index')
              PsiElement(VlangTokenType.:=)(':=')
              ADD_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.-)('-')
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
          PsiElement(VlangTokenType.;)(';')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('index')
            PsiElement(VlangTokenType.>=)('>=')
            LITERAL
              PsiElement(VlangTokenType.int)('0')
          PsiElement(VlangTokenType.;)(';')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              INC_DEC_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.--)('--')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('result_builder')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('write_string')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('u32_to_binary_with_lz')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          ELEMENT
                            VALUE
                              INDEX_OR_SLICE_EXPR
                                REFERENCE_EXPRESSION
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('integer')
                                  PsiElement(VlangTokenType..)('.')
                                  PsiElement(VlangTokenType.identifier)('digits')
                                PsiElement(VlangTokenType.[)('[')
                                REFERENCE_EXPRESSION
                                  PsiElement(VlangTokenType.identifier)('index')
                                PsiElement(VlangTokenType.])(']')
                          PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('result_builder')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('str')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('hex returns the hexadecimal string representation of the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('hex')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('We have the zero integer')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                STRING_LITERAL
                  STRING_TEMPLATE
                    PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                    PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('0')
                    PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
              PsiElement(VlangTokenType.})('}')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('Add the sign if present')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('sign_needed')
          PsiElement(VlangTokenType.:=)(':=')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('signum')
            PsiElement(VlangTokenType.==)('==')
            UNARY_EXPR
              PsiElement(VlangTokenType.-)('-')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result_builder')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('strings')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('new_builder')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  ADD_EXPR
                    MUL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('integer')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('digits')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('len')
                      PsiElement(VlangTokenType.*)('*')
                      LITERAL
                        PsiElement(VlangTokenType.int)('8')
                    PsiElement(VlangTokenType.+)('+')
                    IF_EXPRESSION
                      PsiElement(VlangTokenType.if)('if')
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('sign_needed')
                      BLOCK
                        PsiElement(VlangTokenType.{)('{')
                        SIMPLE_STATEMENT
                          LEFT_HAND_EXPR_LIST
                            LITERAL
                              PsiElement(VlangTokenType.int)('1')
                        PsiElement(VlangTokenType.})('}')
                      ELSE_BRANCH
                        PsiElement(VlangTokenType.else)('else')
                        BLOCK
                          PsiElement(VlangTokenType.{)('{')
                          SIMPLE_STATEMENT
                            LEFT_HAND_EXPR_LIST
                              LITERAL
                                PsiElement(VlangTokenType.int)('0')
                          PsiElement(VlangTokenType.})('}')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('sign_needed')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('result_builder')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('write_string')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          STRING_LITERAL
                            STRING_TEMPLATE
                              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('-')
                              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result_builder')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('write_string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('u32_to_hex_without_lz')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          INDEX_OR_SLICE_EXPR
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('integer')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('digits')
                            PsiElement(VlangTokenType.[)('[')
                            ADD_EXPR
                              REFERENCE_EXPRESSION
                                REFERENCE_EXPRESSION
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('integer')
                                  PsiElement(VlangTokenType..)('.')
                                  PsiElement(VlangTokenType.identifier)('digits')
                                PsiElement(VlangTokenType..)('.')
                                PsiElement(VlangTokenType.identifier)('len')
                              PsiElement(VlangTokenType.-)('-')
                              LITERAL
                                PsiElement(VlangTokenType.int)('1')
                            PsiElement(VlangTokenType.])(']')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.))(')')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        FOR_CLAUSE
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('index')
              PsiElement(VlangTokenType.:=)(':=')
              ADD_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('integer')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.-)('-')
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
          PsiElement(VlangTokenType.;)(';')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('index')
            PsiElement(VlangTokenType.>=)('>=')
            LITERAL
              PsiElement(VlangTokenType.int)('0')
          PsiElement(VlangTokenType.;)(';')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              INC_DEC_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('index')
                PsiElement(VlangTokenType.--)('--')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('result_builder')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('write_string')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('u32_to_hex_with_lz')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          ELEMENT
                            VALUE
                              INDEX_OR_SLICE_EXPR
                                REFERENCE_EXPRESSION
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('integer')
                                  PsiElement(VlangTokenType..)('.')
                                  PsiElement(VlangTokenType.identifier)('digits')
                                PsiElement(VlangTokenType.[)('[')
                                REFERENCE_EXPRESSION
                                  PsiElement(VlangTokenType.identifier)('index')
                                PsiElement(VlangTokenType.])(']')
                          PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('result_builder')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('str')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('radix_str returns the string representation of the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' in the specified radix.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('radix_str')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('radix')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                STRING_LITERAL
                  STRING_TEMPLATE
                    PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                    PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('0')
                    PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
              PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        MATCH_EXPRESSION
          PsiElement(VlangTokenType.match)('match')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('radix')
          PsiElement(VlangTokenType.{)('{')
          MATCH_ARMS
            MATCH_ARM
              LITERAL
                PsiElement(VlangTokenType.int)('2')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('integer')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('binary_str')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.})('}')
            MATCH_ARM
              LITERAL
                PsiElement(VlangTokenType.int)('16')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('integer')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('hex')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.})('}')
            MATCH_ELSE_ARM_CLAUSE
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                SIMPLE_STATEMENT
                  LEFT_HAND_EXPR_LIST
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('integer')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('general_radix_str')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('radix')
                        PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('general_radix_str')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('radix')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('divisor')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('integer_from_u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('radix')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('current')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('integer')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('abs')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('new_current')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('zero_int')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('digit')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('zero_int')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('rune_array')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('rune')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('cap')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                MUL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('current')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.*)('*')
                  LITERAL
                    PsiElement(VlangTokenType.int)('4')
            PsiElement(VlangTokenType.})('}')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('current')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.>)('>')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('new_current')
              PsiElement(VlangTokenType.,)(',')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('digit')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('current')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('div_mod')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('divisor')
                PsiElement(VlangTokenType.))(')')
          APPEND_STATEMENT
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('rune_array')
            SHIFT_LEFT_OP
              PsiElement(VlangTokenType.<<)('<<')
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('big')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('digit_array')
              PsiElement(VlangTokenType.[)('[')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('digit')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('int')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.])(']')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              UNSAFE_EXPRESSION
                PsiElement(VlangTokenType.unsafe)('unsafe')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('digit')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('free')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              UNSAFE_EXPRESSION
                PsiElement(VlangTokenType.unsafe)('unsafe')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('current')
                          PsiElement(VlangTokenType..)('.')
                          PsiElement(VlangTokenType.identifier)('free')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('current')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('new_current')
          PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('integer')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              UNARY_EXPR
                PsiElement(VlangTokenType.-)('-')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              APPEND_STATEMENT
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('rune_array')
                SHIFT_LEFT_OP
                  PsiElement(VlangTokenType.<<)('<<')
                LITERAL
                  PsiElement(VlangTokenType.char)('`-`')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('rune_array')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('reverse_in_place')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('rune_array')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('string')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('str returns the decimal string representation of the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('integer')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('str')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('integer')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('radix_str')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                LITERAL
                  PsiElement(VlangTokenType.int)('10')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('u32_to_binary_without_lz')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('strconv')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('format_uint')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('value')
            PsiElement(VlangTokenType.,)(',')
            ELEMENT
              VALUE
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('u32_to_binary_with_lz')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result_builder')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('strings')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('new_builder')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('32')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('binary_result')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('strconv')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('format_uint')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('2')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result_builder')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('write_string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('strings')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('repeat')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          LITERAL
                            PsiElement(VlangTokenType.char)('`0`')
                      PsiElement(VlangTokenType.,)(',')
                      ELEMENT
                        VALUE
                          ADD_EXPR
                            LITERAL
                              PsiElement(VlangTokenType.int)('32')
                            PsiElement(VlangTokenType.-)('-')
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('binary_result')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('len')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result_builder')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('write_string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('binary_result')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('result_builder')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('str')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('u32_to_hex_without_lz')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('strconv')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('format_uint')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('value')
            PsiElement(VlangTokenType.,)(',')
            ELEMENT
              VALUE
                LITERAL
                  PsiElement(VlangTokenType.int)('16')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('u32_to_hex_with_lz')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('value')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('string')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result_builder')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('strings')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('new_builder')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('8')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('hex_result')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('strconv')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('format_uint')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.int)('16')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result_builder')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('write_string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('strings')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('repeat')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          LITERAL
                            PsiElement(VlangTokenType.char)('`0`')
                      PsiElement(VlangTokenType.,)(',')
                      ELEMENT
                        VALUE
                          ADD_EXPR
                            LITERAL
                              PsiElement(VlangTokenType.int)('8')
                            PsiElement(VlangTokenType.-)('-')
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('hex_result')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('len')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result_builder')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('write_string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('hex_result')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('result_builder')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('str')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('int returns the integer value of the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('NOTE: This may cause loss of precision.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('int')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('int')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('value')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  MUL_EXPR
                    INDEX_OR_SLICE_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('a')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType.[)('[')
                      LITERAL
                        PsiElement(VlangTokenType.int)('0')
                      PsiElement(VlangTokenType.])(']')
                    PsiElement(VlangTokenType.&)('&')
                    LITERAL
                      PsiElement(VlangTokenType.hex)('0x7fffffff')
              PsiElement(VlangTokenType.))(')')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        MUL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('value')
          PsiElement(VlangTokenType.*)('*')
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('signum')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('bytes returns the a byte representation of the integer a, along with the signum int.')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('NOTE: The byte array returned is in big endian order.')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('bytes')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TUPLE_TYPE
          TYPE_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.()('(')
          TYPE_LIST_NO_PIN
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u8')
            PsiElement(VlangTokenType.,)(',')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('int')
          PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL_VALUE_EXPRESSION
                  ARRAY_TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    PsiElement(VlangTokenType.[)('[')
                    PsiElement(VlangTokenType.])(']')
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('u8')
                  PsiElement(VlangTokenType.{)('{')
                  ELEMENT
                    KEY
                      FIELD_NAME
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('len')
                    PsiElement(VlangTokenType.:)(':')
                    VALUE
                      LITERAL
                        PsiElement(VlangTokenType.int)('0')
                  PsiElement(VlangTokenType.})('}')
                PsiElement(VlangTokenType.,)(',')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL_VALUE_EXPRESSION
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u8')
            PsiElement(VlangTokenType.{)('{')
            ELEMENT
              KEY
                FIELD_NAME
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('cap')
              PsiElement(VlangTokenType.:)(':')
              VALUE
                MUL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('a')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('len')
                  PsiElement(VlangTokenType.*)('*')
                  LITERAL
                    PsiElement(VlangTokenType.int)('4')
            PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('mask')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('u32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  LITERAL
                    PsiElement(VlangTokenType.hex)('0xff000000')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('offset')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL
            PsiElement(VlangTokenType.int)('24')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('non_zero_found')
          PsiElement(VlangTokenType.:=)(':=')
          LITERAL
            PsiElement(VlangTokenType.false)('false')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        FOR_CLAUSE
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('index')
              PsiElement(VlangTokenType.:=)(':=')
              ADD_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.-)('-')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
          PsiElement(VlangTokenType.;)(';')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('index')
            PsiElement(VlangTokenType.>=)('>=')
            LITERAL
              PsiElement(VlangTokenType.int)('0')
          PsiElement(VlangTokenType.;)(';')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('value')
              PsiElement(VlangTokenType.:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('u8')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      MUL_EXPR
                        PARENTHESES_EXPR
                          PsiElement(VlangTokenType.()('(')
                          MUL_EXPR
                            INDEX_OR_SLICE_EXPR
                              REFERENCE_EXPRESSION
                                REFERENCE_EXPRESSION
                                  PsiElement(VlangTokenType.identifier)('a')
                                PsiElement(VlangTokenType..)('.')
                                PsiElement(VlangTokenType.identifier)('digits')
                              PsiElement(VlangTokenType.[)('[')
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('index')
                              PsiElement(VlangTokenType.])(']')
                            PsiElement(VlangTokenType.&)('&')
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('mask')
                          PsiElement(VlangTokenType.))(')')
                        PsiElement(VlangTokenType.>>)('>>')
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('offset')
                  PsiElement(VlangTokenType.))(')')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('non_zero_found')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            OR_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('non_zero_found')
              PsiElement(VlangTokenType.||)('||')
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('value')
                PsiElement(VlangTokenType.!=)('!=')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('non_zero_found')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  APPEND_STATEMENT
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('result')
                    SHIFT_LEFT_OP
                      PsiElement(VlangTokenType.<<)('<<')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('value')
                  PsiElement(VlangTokenType.})('}')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('mask')
            ASSIGN_OP
              PsiElement(VlangTokenType.>>=)('>>=')
            LITERAL
              PsiElement(VlangTokenType.int)('8')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('offset')
            ASSIGN_OP
              PsiElement(VlangTokenType.-=)('-=')
            LITERAL
              PsiElement(VlangTokenType.int)('8')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('offset')
                  PsiElement(VlangTokenType.<)('<')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('mask')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.=)('=')
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('u32')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            LITERAL
                              PsiElement(VlangTokenType.hex)('0xff000000')
                        PsiElement(VlangTokenType.))(')')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('offset')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.=)('=')
                    LITERAL
                      PsiElement(VlangTokenType.int)('24')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      INC_DEC_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('index')
                        PsiElement(VlangTokenType.--)('--')
                  PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('result')
        PsiElement(VlangTokenType.,)(',')
        REFERENCE_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType..)('.')
          PsiElement(VlangTokenType.identifier)('signum')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('factorial returns the factorial of the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('factorial')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('one_int')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('product')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('one_int')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('current')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('a')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('current')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.!=)('!=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('product')
            ASSIGN_OP
              PsiElement(VlangTokenType.*=)('*=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('current')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('current')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('dec')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('product')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('isqrt returns the closest integer square root of the given integer.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('isqrt')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.<)('<')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('panic')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          STRING_LITERAL
                            STRING_TEMPLATE
                              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Cannot obtain square root of negative integer')
                              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            AND_EXPR
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.==)('==')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.&&)('&&')
              CONDITIONAL_EXPR
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('a')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('digits')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('last')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.==)('==')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('shift')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('bit_len')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              MUL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('shift')
                PsiElement(VlangTokenType.&)('&')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              ASSIGNMENT_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('shift')
                ASSIGN_OP
                  PsiElement(VlangTokenType.+=)('+=')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('result')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('zero_int')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('shift')
          PsiElement(VlangTokenType.>=)('>=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('result')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('result')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('lshift')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('larger')
              PsiElement(VlangTokenType.:=)(':=')
              ADD_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('result')
                PsiElement(VlangTokenType.+)('+')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('one_int')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PARENTHESES_EXPR
                        PsiElement(VlangTokenType.()('(')
                        MUL_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('larger')
                          PsiElement(VlangTokenType.*)('*')
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('larger')
                        PsiElement(VlangTokenType.))(')')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('abs_cmp')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          CALL_EXPR
                            REFERENCE_EXPRESSION
                              REFERENCE_EXPRESSION
                                PsiElement(VlangTokenType.identifier)('a')
                              PsiElement(VlangTokenType..)('.')
                              PsiElement(VlangTokenType.identifier)('rshift')
                            ARGUMENT_LIST
                              PsiElement(VlangTokenType.()('(')
                              ELEMENT
                                VALUE
                                  CALL_EXPR
                                    REFERENCE_EXPRESSION
                                      PsiElement(VlangTokenType.identifier)('u32')
                                    ARGUMENT_LIST
                                      PsiElement(VlangTokenType.()('(')
                                      ELEMENT
                                        VALUE
                                          REFERENCE_EXPRESSION
                                            PsiElement(VlangTokenType.identifier)('shift')
                                      PsiElement(VlangTokenType.))(')')
                              PsiElement(VlangTokenType.))(')')
                      PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.<=)('<=')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('result')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.=)('=')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('larger')
                  PsiElement(VlangTokenType.})('}')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('shift')
            ASSIGN_OP
              PsiElement(VlangTokenType.-=)('-=')
            LITERAL
              PsiElement(VlangTokenType.int)('2')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('result')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('inline')
        PsiElement(VlangTokenType.])(']')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('bi_min')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('a')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        IF_EXPRESSION
          PsiElement(VlangTokenType.if)('if')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.<)('<')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.})('}')
          ELSE_BRANCH
            PsiElement(VlangTokenType.else)('else')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('inline')
        PsiElement(VlangTokenType.])(']')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('bi_max')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('a')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        IF_EXPRESSION
          PsiElement(VlangTokenType.if)('if')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.>)('>')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.})('}')
          ELSE_BRANCH
            PsiElement(VlangTokenType.else)('else')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('direct_array_access')
        PsiElement(VlangTokenType.])(']')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('bi')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('msb')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('u32')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        FOR_CLAUSE
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('idx')
              PsiElement(VlangTokenType.:=)(':=')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
          PsiElement(VlangTokenType.;)(';')
          CONDITIONAL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('idx')
            PsiElement(VlangTokenType.<)('<')
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('bi')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
          PsiElement(VlangTokenType.;)(';')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('idx')
            ASSIGN_OP
              PsiElement(VlangTokenType.+=)('+=')
            LITERAL
              PsiElement(VlangTokenType.int)('1')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('word')
              PsiElement(VlangTokenType.:=)(':=')
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('bi')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType.[)('[')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('idx')
                PsiElement(VlangTokenType.])(']')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('word')
                  PsiElement(VlangTokenType.>)('>')
                  LITERAL
                    PsiElement(VlangTokenType.int)('0')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('u32')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        ELEMENT
                          VALUE
                            ADD_EXPR
                              PARENTHESES_EXPR
                                PsiElement(VlangTokenType.()('(')
                                MUL_EXPR
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('idx')
                                  PsiElement(VlangTokenType.*)('*')
                                  LITERAL
                                    PsiElement(VlangTokenType.int)('32')
                                PsiElement(VlangTokenType.))(')')
                              PsiElement(VlangTokenType.+)('+')
                              CALL_EXPR
                                REFERENCE_EXPRESSION
                                  REFERENCE_EXPRESSION
                                    PsiElement(VlangTokenType.identifier)('bits')
                                  PsiElement(VlangTokenType..)('.')
                                  PsiElement(VlangTokenType.identifier)('trailing_zeros_32')
                                ARGUMENT_LIST
                                  PsiElement(VlangTokenType.()('(')
                                  ELEMENT
                                    VALUE
                                      REFERENCE_EXPRESSION
                                        PsiElement(VlangTokenType.identifier)('word')
                                  PsiElement(VlangTokenType.))(')')
                        PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('u32')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                LITERAL
                  PsiElement(VlangTokenType.int)('32')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('gcd returns the greatest common divisor of the two integers ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' and ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`b`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('gcd')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('b')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('b')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('abs')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('abs')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.<)('<')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    CALL_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('a')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('neg')
                      ARGUMENT_LIST
                        PsiElement(VlangTokenType.()('(')
                        PsiElement(VlangTokenType.))(')')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('gcd')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('b')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.<)('<')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('gcd')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        CALL_EXPR
                          REFERENCE_EXPRESSION
                            REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('b')
                            PsiElement(VlangTokenType..)('.')
                            PsiElement(VlangTokenType.identifier)('neg')
                          ARGUMENT_LIST
                            PsiElement(VlangTokenType.()('(')
                            PsiElement(VlangTokenType.))(')')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              ADD_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
                PsiElement(VlangTokenType.+)('+')
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('b')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('digits')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.<=)('<=')
              LITERAL
                PsiElement(VlangTokenType.int)('2')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                CALL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('gcd_euclid')
                  ARGUMENT_LIST
                    PsiElement(VlangTokenType.()('(')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('a')
                    PsiElement(VlangTokenType.,)(',')
                    ELEMENT
                      VALUE
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('b')
                    PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              BLOCK
                PsiElement(VlangTokenType.{)('{')
                RETURN_STATEMENT
                  PsiElement(VlangTokenType.return)('return')
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('gcd_binary')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('a')
                      PsiElement(VlangTokenType.,)(',')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('b')
                      PsiElement(VlangTokenType.))(')')
                PsiElement(VlangTokenType.})('}')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('gcd_euclid')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('x')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('y')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('x')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('y')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('r')
          PsiElement(VlangTokenType.:=)(':=')
          MUL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType.%)('%')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('r')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.!=)('!=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('r')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('r')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            MUL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.%)('%')
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('b')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('Inspired by the 2013-christmas-special by D. Lemire & R. Corderoy https://en.algorithmica.org/hpc/analyzing-performance/gcd/')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('For more information, refer to the Wikipedia article: https://en.wikipedia.org/wiki/Binary_GCD_algorithm')
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('Discussion and further information: https://lemire.me/blog/2013/12/26/fastest-way-to-compute-the-greatest-common-divisor/')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('gcd_binary')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('x')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.,)(',')
        PARAM_DEFINITION
          VAR_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.identifier)('y')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Integer')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('Integer')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('x')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('b')
          PsiElement(VlangTokenType.:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('y')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              VAR_MODIFIER
                PsiElement(VlangTokenType.mut)('mut')
            PsiElement(VlangTokenType.identifier)('az')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('msb')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('bz')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('msb')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('shift')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('math')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('min')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('az')
              PsiElement(VlangTokenType.,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('bz')
              PsiElement(VlangTokenType.))(')')
      ASSIGNMENT_STATEMENT
        LEFT_HAND_EXPR_LIST
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('b')
        ASSIGN_OP
          PsiElement(VlangTokenType.=)('=')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('rshift')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('bz')
            PsiElement(VlangTokenType.))(')')
      FOR_STATEMENT
        PsiElement(VlangTokenType.for)('for')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('signum')
          PsiElement(VlangTokenType.!=)('!=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('rshift')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('az')
                PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            VAR_DECLARATION
              VAR_DEFINITION
                VAR_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.identifier)('diff')
              PsiElement(VlangTokenType.:=)(':=')
              ADD_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType.-)('-')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('az')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('diff')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('msb')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                PsiElement(VlangTokenType.))(')')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('b')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            CALL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('bi_min')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('a')
                PsiElement(VlangTokenType.,)(',')
                ELEMENT
                  VALUE
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('b')
                PsiElement(VlangTokenType.))(')')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
            ASSIGN_OP
              PsiElement(VlangTokenType.=)('=')
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('diff')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('abs')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        CALL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('b')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('lshift')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('shift')
            PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('bit_len returns the number of bits required to represent the integer ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`a`')
    PsiElement(VlangTokenType.<DOC_DATA>)('.')
  METHOD_DECLARATION
    ATTRIBUTES
      ATTRIBUTE
        PsiElement(VlangTokenType.[)('[')
        ATTRIBUTE_EXPRESSION
          PLAIN_ATTRIBUTE
            ATTRIBUTE_KEY
              ATTRIBUTE_IDENTIFIER
                PsiElement(VlangTokenType.identifier)('inline')
        PsiElement(VlangTokenType.])(']')
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('x')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Integer')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('bit_len')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        TYPE
          TYPE_MODIFIERS
            <empty list>
          TYPE_REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('int')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('x')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('signum')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('x')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('digits')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('len')
              PsiElement(VlangTokenType.==)('==')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        ADD_EXPR
          MUL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('x')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('digits')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('len')
            PsiElement(VlangTokenType.*)('*')
            LITERAL
              PsiElement(VlangTokenType.int)('32')
          PsiElement(VlangTokenType.-)('-')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('bits')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('leading_zeros_32')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('x')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('digits')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('last')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.))(')')
      PsiElement(VlangTokenType.})('}')