V Language file
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          VAR_MODIFIER
            PsiElement(VlangTokenType.mut)('mut')
        PsiElement(VlangTokenType.identifier)('vls_exec_name')
      PsiElement(VlangTokenType.:=)(':=')
      STRING_LITERAL
        STRING_TEMPLATE
          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('vls')
          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      COMPILE_TIME_IF_EXPRESSION
        PsiElement(VlangTokenType.$if)('$if')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('windows')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('vls_exec_name')
            ASSIGN_OP
              PsiElement(VlangTokenType.+=)('+=')
            STRING_LITERAL
              STRING_TEMPLATE
                PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('.exe')
                PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
          PsiElement(VlangTokenType.})('}')
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          <empty list>
        PsiElement(VlangTokenType.identifier)('project_folder')
      PsiElement(VlangTokenType.:=)(':=')
      CALL_EXPR
        REFERENCE_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('os')
          PsiElement(VlangTokenType..)('.')
          PsiElement(VlangTokenType.identifier)('dir')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('executable')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          <empty list>
        PsiElement(VlangTokenType.identifier)('full_vls_bin_dir')
      PsiElement(VlangTokenType.:=)(':=')
      CALL_EXPR
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('real_path')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('join_path')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('project_folder')
                  PsiElement(VlangTokenType.,)(',')
                  ELEMENT
                    VALUE
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('bin')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          <empty list>
        PsiElement(VlangTokenType.identifier)('full_vls_exec_path')
      PsiElement(VlangTokenType.:=)(':=')
      CALL_EXPR
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('real_path')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('join_path')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('full_vls_bin_dir')
                  PsiElement(VlangTokenType.,)(',')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('vls_exec_name')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      CALL_EXPR_WITH_PROPAGATE
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('chdir')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('project_folder')
          PsiElement(VlangTokenType.))(')')
        PsiElement(VlangTokenType.?)('?')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      OR_BLOCK_EXPR
        CALL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('mkdir')
          ARGUMENT_LIST
            PsiElement(VlangTokenType.()('(')
            ELEMENT
              VALUE
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('full_vls_bin_dir')
            PsiElement(VlangTokenType.))(')')
        PsiElement(VlangTokenType.or)('or')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          PsiElement(VlangTokenType.})('}')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('use system default C compiler if found')
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          VAR_MODIFIER
            PsiElement(VlangTokenType.mut)('mut')
        PsiElement(VlangTokenType.identifier)('cc')
      PsiElement(VlangTokenType.:=)(':=')
      STRING_LITERAL
        STRING_TEMPLATE
          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('cc')
          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      IF_EXPRESSION
        PsiElement(VlangTokenType.if)('if')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('os')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('args')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('len')
          PsiElement(VlangTokenType.>=)('>=')
          LITERAL
            PsiElement(VlangTokenType.int)('2')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                IN_EXPRESSION
                  INDEX_OR_SLICE_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('os')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('args')
                    PsiElement(VlangTokenType.[)('[')
                    LITERAL
                      PsiElement(VlangTokenType.int)('1')
                    PsiElement(VlangTokenType.])(']')
                  PsiElement(VlangTokenType.in)('in')
                  ARRAY_CREATION
                    PsiElement(VlangTokenType.[)('[')
                    ARRAY_CREATION_LIST
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('cc')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.,)(',')
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('gcc')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.,)(',')
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('clang')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.,)(',')
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('msvc')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                    PsiElement(VlangTokenType.])(']')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  ASSIGNMENT_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('cc')
                    ASSIGN_OP
                      PsiElement(VlangTokenType.=)('=')
                    INDEX_OR_SLICE_EXPR
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('os')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('args')
                      PsiElement(VlangTokenType.[)('[')
                      LITERAL
                        PsiElement(VlangTokenType.int)('1')
                      PsiElement(VlangTokenType.])(']')
                  PsiElement(VlangTokenType.})('}')
                ELSE_BRANCH
                  PsiElement(VlangTokenType.else)('else')
                  BLOCK
                    PsiElement(VlangTokenType.{)('{')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        CALL_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('println')
                          ARGUMENT_LIST
                            PsiElement(VlangTokenType.()('(')
                            ELEMENT
                              VALUE
                                STRING_LITERAL
                                  STRING_TEMPLATE
                                    PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                                    PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('> Usage error: parameter must one of cc, gcc, clang, msvc')
                                    PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                            PsiElement(VlangTokenType.))(')')
                    SIMPLE_STATEMENT
                      LEFT_HAND_EXPR_LIST
                        CALL_EXPR
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('exit')
                          ARGUMENT_LIST
                            PsiElement(VlangTokenType.()('(')
                            ELEMENT
                              VALUE
                                LITERAL
                                  PsiElement(VlangTokenType.int)('1')
                            PsiElement(VlangTokenType.))(')')
                    PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      COMPILE_TIME_IF_EXPRESSION
        PsiElement(VlangTokenType.$if)('$if')
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('windows')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                CONDITIONAL_EXPR
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('cc')
                  PsiElement(VlangTokenType.==)('==')
                  STRING_LITERAL
                    STRING_TEMPLATE
                      PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                      PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('cc')
                      PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('eprintln')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          ELEMENT
                            VALUE
                              STRING_LITERAL
                                STRING_TEMPLATE
                                  PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                                  PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('> Usage error: for Windows, you must need to specify the compiler to use (either gcc, clang, or msvc)')
                                  PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                          PsiElement(VlangTokenType.))(')')
                  SIMPLE_STATEMENT
                    LEFT_HAND_EXPR_LIST
                      CALL_EXPR
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('exit')
                        ARGUMENT_LIST
                          PsiElement(VlangTokenType.()('(')
                          ELEMENT
                            VALUE
                              LITERAL
                                PsiElement(VlangTokenType.int)('1')
                          PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.})('}')
          PsiElement(VlangTokenType.})('}')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      CALL_EXPR
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('println')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              STRING_LITERAL
                STRING_TEMPLATE
                  PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                  PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('> Building VLS...')
                  PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          <empty list>
        PsiElement(VlangTokenType.identifier)('vls_git_hash')
      PsiElement(VlangTokenType.:=)(':=')
      CALL_EXPR
        REFERENCE_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('os')
          PsiElement(VlangTokenType..)('.')
          PsiElement(VlangTokenType.identifier)('execute')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              STRING_LITERAL
                STRING_TEMPLATE
                  PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                  PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('git rev-parse --short HEAD')
                  PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      IF_EXPRESSION
        PsiElement(VlangTokenType.if)('if')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('vls_git_hash')
            PsiElement(VlangTokenType..)('.')
            PsiElement(VlangTokenType.identifier)('exit_code')
          PsiElement(VlangTokenType.!=)('!=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('println')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Please install git')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('exit')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('vls_git_hash')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('exit_code')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.})('}')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      CALL_EXPR
        REFERENCE_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('os')
          PsiElement(VlangTokenType..)('.')
          PsiElement(VlangTokenType.identifier)('setenv')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              STRING_LITERAL
                STRING_TEMPLATE
                  PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                  PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('VLS_BUILD_COMMIT')
                  PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
          PsiElement(VlangTokenType.,)(',')
          ELEMENT
            VALUE
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('vls_git_hash')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('output')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('trim_space')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.,)(',')
          ELEMENT
            VALUE
              LITERAL
                PsiElement(VlangTokenType.true)('true')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          <empty list>
        PsiElement(VlangTokenType.identifier)('use_libbacktrace_flag')
      PsiElement(VlangTokenType.:=)(':=')
      IF_EXPRESSION
        PsiElement(VlangTokenType.if)('if')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('cc')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('msvc')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              STRING_LITERAL
                STRING_TEMPLATE
                  PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                  PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
          PsiElement(VlangTokenType.})('}')
        ELSE_BRANCH
          PsiElement(VlangTokenType.else)('else')
          BLOCK
            PsiElement(VlangTokenType.{)('{')
            SIMPLE_STATEMENT
              LEFT_HAND_EXPR_LIST
                STRING_LITERAL
                  STRING_TEMPLATE
                    PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                    PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('-d use_libbacktrace')
                    PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
            PsiElement(VlangTokenType.})('}')
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          <empty list>
        PsiElement(VlangTokenType.identifier)('cmd')
      PsiElement(VlangTokenType.:=)(':=')
      STRING_LITERAL
        STRING_TEMPLATE
          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('v -g -gc boehm ')
          SHORT_STRING_TEMPLATE_ENTRY
            PsiElement(VlangTokenType.SHORT_TEMPLATE_ENTRY_START)('$')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('use_libbacktrace_flag')
          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)(' -cc ')
          SHORT_STRING_TEMPLATE_ENTRY
            PsiElement(VlangTokenType.SHORT_TEMPLATE_ENTRY_START)('$')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('cc')
          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)(' cmd/vls -o ')
          SHORT_STRING_TEMPLATE_ENTRY
            PsiElement(VlangTokenType.SHORT_TEMPLATE_ENTRY_START)('$')
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('full_vls_exec_path')
          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      CALL_EXPR
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('println')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('cmd')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    VAR_DECLARATION
      VAR_DEFINITION
        VAR_MODIFIERS
          <empty list>
        PsiElement(VlangTokenType.identifier)('ret')
      PsiElement(VlangTokenType.:=)(':=')
      CALL_EXPR
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('system')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('cmd')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      IF_EXPRESSION
        PsiElement(VlangTokenType.if)('if')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('ret')
          PsiElement(VlangTokenType.!=)('!=')
          LITERAL
            PsiElement(VlangTokenType.int)('0')
        BLOCK
          PsiElement(VlangTokenType.{)('{')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('println')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Failed building VLS')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.))(')')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('exit')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('ret')
                  PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.})('}')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      CALL_EXPR
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('println')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              STRING_LITERAL
                STRING_TEMPLATE
                  PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                  PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('> VLS built successfully!')
                  PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
          PsiElement(VlangTokenType.))(')')
  SIMPLE_STATEMENT
    LEFT_HAND_EXPR_LIST
      CALL_EXPR
        REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('println')
        ARGUMENT_LIST
          PsiElement(VlangTokenType.()('(')
          ELEMENT
            VALUE
              STRING_LITERAL
                STRING_TEMPLATE
                  PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                  PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Executable saved in: ')
                  SHORT_STRING_TEMPLATE_ENTRY
                    PsiElement(VlangTokenType.SHORT_TEMPLATE_ENTRY_START)('$')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('full_vls_exec_path')
                  PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
          PsiElement(VlangTokenType.))(')')