V Language file
  MODULE_CLAUSE
    PsiElement(VlangTokenType.module)('module')
    PsiElement(VlangTokenType.identifier)('parser')
  PsiComment(VLANG_DOC_COMMENT)
    PsiElement(VlangTokenType.<DOC_GAP>)('//')
    PsiElement(VlangTokenType.<DOC_DATA>)('array returns ')
    VlangDocCodeSpanImpl(VlangTokenType.<DOC_CODE_SPAN>)
      PsiElement(VlangTokenType.<DOC_DATA>)('`Any`')
    PsiElement(VlangTokenType.<DOC_DATA>)(' as an array.')
  METHOD_DECLARATION
    SYMBOL_VISIBILITY
      PsiElement(VlangTokenType.pub)('pub')
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.()('(')
    RECEIVER
      VAR_MODIFIERS
        <empty list>
      PsiElement(VlangTokenType.identifier)('a')
      TYPE
        TYPE_MODIFIERS
          <empty list>
        TYPE_REFERENCE_EXPRESSION
          PsiElement(VlangTokenType.identifier)('Any')
    PsiElement(VlangTokenType.))(')')
    METHOD_NAME
      PsiElement(VlangTokenType.identifier)('array')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
      RESULT
        ARRAY_TYPE
          TYPE_MODIFIERS
            <empty list>
          PsiElement(VlangTokenType.[)('[')
          PsiElement(VlangTokenType.])(']')
          TYPE
            TYPE_MODIFIERS
              <empty list>
            TYPE_REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('Any')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          IF_EXPRESSION
            PsiElement(VlangTokenType.if)('if')
            IS_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.is)('is')
              ARRAY_TYPE
                TYPE_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.[)('[')
                PsiElement(VlangTokenType.])(']')
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('Any')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              RETURN_STATEMENT
                PsiElement(VlangTokenType.return)('return')
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('a')
              PsiElement(VlangTokenType.})('}')
            ELSE_BRANCH
              PsiElement(VlangTokenType.else)('else')
              IF_EXPRESSION
                PsiElement(VlangTokenType.if)('if')
                IS_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('a')
                  PsiElement(VlangTokenType.is)('is')
                  MAP_TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    PsiElement(VlangTokenType.identifier)('map')
                    PsiElement(VlangTokenType.[)('[')
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('string')
                    PsiElement(VlangTokenType.])(']')
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('Any')
                BLOCK
                  PsiElement(VlangTokenType.{)('{')
                  SIMPLE_STATEMENT
                    VAR_DECLARATION
                      VAR_DEFINITION
                        VAR_MODIFIERS
                          VAR_MODIFIER
                            PsiElement(VlangTokenType.mut)('mut')
                        PsiElement(VlangTokenType.identifier)('arr')
                      PsiElement(VlangTokenType.:=)(':=')
                      LITERAL_VALUE_EXPRESSION
                        ARRAY_TYPE
                          TYPE_MODIFIERS
                            <empty list>
                          PsiElement(VlangTokenType.[)('[')
                          PsiElement(VlangTokenType.])(']')
                          TYPE
                            TYPE_MODIFIERS
                              <empty list>
                            TYPE_REFERENCE_EXPRESSION
                              PsiElement(VlangTokenType.identifier)('Any')
                        PsiElement(VlangTokenType.{)('{')
                        PsiElement(VlangTokenType.})('}')
                  FOR_STATEMENT
                    PsiElement(VlangTokenType.for)('for')
                    RANGE_CLAUSE
                      VAR_DEFINITION
                        VAR_MODIFIERS
                          <empty list>
                        PsiElement(VlangTokenType.identifier)('_')
                      PsiElement(VlangTokenType.,)(',')
                      VAR_DEFINITION
                        VAR_MODIFIERS
                          <empty list>
                        PsiElement(VlangTokenType.identifier)('v')
                      PsiElement(VlangTokenType.in)('in')
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('a')
                    BLOCK
                      PsiElement(VlangTokenType.{)('{')
                      APPEND_STATEMENT
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('arr')
                        SHIFT_LEFT_OP
                          PsiElement(VlangTokenType.<<)('<<')
                        REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('v')
                      PsiElement(VlangTokenType.})('}')
                  RETURN_STATEMENT
                    PsiElement(VlangTokenType.return)('return')
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('arr')
                  PsiElement(VlangTokenType.})('}')
      RETURN_STATEMENT
        PsiElement(VlangTokenType.return)('return')
        ARRAY_CREATION
          PsiElement(VlangTokenType.[)('[')
          ARRAY_CREATION_LIST
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('a')
          PsiElement(VlangTokenType.])(']')
      PsiElement(VlangTokenType.})('}')
  FUNCTION_DECLARATION
    PsiElement(VlangTokenType.fn)('fn')
    PsiElement(VlangTokenType.identifier)('test_parse_compact_text')
    SIGNATURE
      PARAMETERS
        PsiElement(VlangTokenType.()('(')
        PsiElement(VlangTokenType.))(')')
    BLOCK
      PsiElement(VlangTokenType.{)('{')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('toml_doc')
          PsiElement(VlangTokenType.:=)(':=')
          OR_BLOCK_EXPR
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('toml')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('parse_text')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('toml_text')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.or)('or')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('panic')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          REFERENCE_EXPRESSION
                            PsiElement(VlangTokenType.identifier)('err')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('title')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('toml_doc')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('value')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  STRING_LITERAL
                    STRING_TEMPLATE
                      PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                      PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('title')
                      PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
              PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(VlangTokenType.identifier)('title')
          PsiElement(VlangTokenType.==)('==')
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('toml')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('Any')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              ELEMENT
                VALUE
                  STRING_LITERAL
                    STRING_TEMPLATE
                      PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                      PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('TOML Example')
                      PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
              PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('title')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('string')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('TOML Example')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('database')
          PsiElement(VlangTokenType.:=)(':=')
          AS_EXPRESSION
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('toml_doc')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('value')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    STRING_LITERAL
                      STRING_TEMPLATE
                        PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                        PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('database')
                        PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.as)('as')
            MAP_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.identifier)('map')
              PsiElement(VlangTokenType.[)('[')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('string')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('Any')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('db_serv')
          PsiElement(VlangTokenType.:=)(':=')
          OR_BLOCK_EXPR
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('database')
              PsiElement(VlangTokenType.[)('[')
              STRING_LITERAL
                STRING_TEMPLATE
                  PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                  PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('server')
                  PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.or)('or')
            BLOCK
              PsiElement(VlangTokenType.{)('{')
              SIMPLE_STATEMENT
                LEFT_HAND_EXPR_LIST
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('panic')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          STRING_LITERAL
                            STRING_TEMPLATE
                              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('could not access "server" index in "database" variable')
                              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.})('}')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('db_serv')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('string')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('192.168.1.1')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('toml_doc')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('value')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    STRING_LITERAL
                      STRING_TEMPLATE
                        PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                        PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('owner.name')
                        PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('string')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('Tom Preston-Werner')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('toml_doc')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('value')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    STRING_LITERAL
                      STRING_TEMPLATE
                        PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                        PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('database.server')
                        PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('string')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('192.168.1.1')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('database_ports')
          PsiElement(VlangTokenType.:=)(':=')
          AS_EXPRESSION
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('toml_doc')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('value')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    STRING_LITERAL
                      STRING_TEMPLATE
                        PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                        PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('database.ports')
                        PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.as)('as')
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('Any')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('database_ports')
              PsiElement(VlangTokenType.[)('[')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('i64')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('8000')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('database_ports')
              PsiElement(VlangTokenType.[)('[')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('i64')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('8001')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('database_ports')
              PsiElement(VlangTokenType.[)('[')
              LITERAL
                PsiElement(VlangTokenType.int)('2')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('i64')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('8002')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('database_ports')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('8000')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('database_ports')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('8001')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('database_ports')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('2')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('8002')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('toml_doc')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('value')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    STRING_LITERAL
                      STRING_TEMPLATE
                        PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                        PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('database.connection_max')
                        PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('i64')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('5000')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          AS_EXPRESSION
            CALL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('toml_doc')
                PsiElement(VlangTokenType..)('.')
                PsiElement(VlangTokenType.identifier)('value')
              ARGUMENT_LIST
                PsiElement(VlangTokenType.()('(')
                ELEMENT
                  VALUE
                    STRING_LITERAL
                      STRING_TEMPLATE
                        PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                        PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('database.enabled')
                        PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                PsiElement(VlangTokenType.))(')')
            PsiElement(VlangTokenType.as)('as')
            TYPE
              TYPE_MODIFIERS
                <empty list>
              TYPE_REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('bool')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.true)('true')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml_doc')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('value')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('servers.alpha.ip')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('10.0.0.1')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml_doc')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('value')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('servers.alpha.dc')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('eqdc10')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml_doc')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('value')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('servers.beta.ip')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('10.0.0.2')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml_doc')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('value')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('servers.beta.dc')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('eqdc10')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('clients_data')
          PsiElement(VlangTokenType.:=)(':=')
          PARENTHESES_EXPR
            PsiElement(VlangTokenType.()('(')
            AS_EXPRESSION
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml_doc')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('value')
                ARGUMENT_LIST
                  PsiElement(VlangTokenType.()('(')
                  ELEMENT
                    VALUE
                      STRING_LITERAL
                        STRING_TEMPLATE
                          PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                          PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('clients.data')
                          PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                  PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType.as)('as')
              ARRAY_TYPE
                TYPE_MODIFIERS
                  <empty list>
                PsiElement(VlangTokenType.[)('[')
                PsiElement(VlangTokenType.])(']')
                TYPE
                  TYPE_MODIFIERS
                    <empty list>
                  TYPE_REFERENCE_EXPRESSION
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(VlangTokenType.identifier)('toml')
                    PsiElement(VlangTokenType..)('.')
                    PsiElement(VlangTokenType.identifier)('Any')
            PsiElement(VlangTokenType.))(')')
      PsiComment(VLANG_DOC_COMMENT)
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('dump(clients_data)')
        PsiElement(VlangTokenType.<DOC_GAP>)('//')
        PsiElement(VlangTokenType.<DOC_DATA>)('assert false')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('gamma_delta_array')
          PsiElement(VlangTokenType.:=)(':=')
          AS_EXPRESSION
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('clients_data')
              PsiElement(VlangTokenType.[)('[')
              LITERAL
                PsiElement(VlangTokenType.int)('0')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.as)('as')
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('Any')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('digits_array')
          PsiElement(VlangTokenType.:=)(':=')
          AS_EXPRESSION
            INDEX_OR_SLICE_EXPR
              REFERENCE_EXPRESSION
                PsiElement(VlangTokenType.identifier)('clients_data')
              PsiElement(VlangTokenType.[)('[')
              LITERAL
                PsiElement(VlangTokenType.int)('1')
              PsiElement(VlangTokenType.])(']')
            PsiElement(VlangTokenType.as)('as')
            ARRAY_TYPE
              TYPE_MODIFIERS
                <empty list>
              PsiElement(VlangTokenType.[)('[')
              PsiElement(VlangTokenType.])(']')
              TYPE
                TYPE_MODIFIERS
                  <empty list>
                TYPE_REFERENCE_EXPRESSION
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(VlangTokenType.identifier)('toml')
                  PsiElement(VlangTokenType..)('.')
                  PsiElement(VlangTokenType.identifier)('Any')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('gamma_delta_array')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('gamma')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('gamma_delta_array')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('string')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('delta')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits_array')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('0')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('1')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(VlangTokenType.identifier)('digits_array')
                PsiElement(VlangTokenType.[)('[')
                LITERAL
                  PsiElement(VlangTokenType.int)('1')
                PsiElement(VlangTokenType.])(']')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('int')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
          PsiElement(VlangTokenType.==)('==')
          LITERAL
            PsiElement(VlangTokenType.int)('2')
      SIMPLE_STATEMENT
        VAR_DECLARATION
          VAR_DEFINITION
            VAR_MODIFIERS
              <empty list>
            PsiElement(VlangTokenType.identifier)('clients_hosts')
          PsiElement(VlangTokenType.:=)(':=')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PARENTHESES_EXPR
                PsiElement(VlangTokenType.()('(')
                AS_EXPRESSION
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(VlangTokenType.identifier)('toml_doc')
                      PsiElement(VlangTokenType..)('.')
                      PsiElement(VlangTokenType.identifier)('value')
                    ARGUMENT_LIST
                      PsiElement(VlangTokenType.()('(')
                      ELEMENT
                        VALUE
                          STRING_LITERAL
                            STRING_TEMPLATE
                              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
                              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('clients.hosts')
                              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
                      PsiElement(VlangTokenType.))(')')
                  PsiElement(VlangTokenType.as)('as')
                  ARRAY_TYPE
                    TYPE_MODIFIERS
                      <empty list>
                    PsiElement(VlangTokenType.[)('[')
                    PsiElement(VlangTokenType.])(']')
                    TYPE
                      TYPE_MODIFIERS
                        <empty list>
                      TYPE_REFERENCE_EXPRESSION
                        TYPE_REFERENCE_EXPRESSION
                          PsiElement(VlangTokenType.identifier)('toml')
                        PsiElement(VlangTokenType..)('.')
                        PsiElement(VlangTokenType.identifier)('Any')
                PsiElement(VlangTokenType.))(')')
              PsiElement(VlangTokenType..)('.')
              PsiElement(VlangTokenType.identifier)('as_strings')
            ARGUMENT_LIST
              PsiElement(VlangTokenType.()('(')
              PsiElement(VlangTokenType.))(')')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          INDEX_OR_SLICE_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('clients_hosts')
            PsiElement(VlangTokenType.[)('[')
            LITERAL
              PsiElement(VlangTokenType.int)('0')
            PsiElement(VlangTokenType.])(']')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('alpha')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      ASSERT_STATEMENT
        PsiElement(VlangTokenType.assert)('assert')
        CONDITIONAL_EXPR
          INDEX_OR_SLICE_EXPR
            REFERENCE_EXPRESSION
              PsiElement(VlangTokenType.identifier)('clients_hosts')
            PsiElement(VlangTokenType.[)('[')
            LITERAL
              PsiElement(VlangTokenType.int)('1')
            PsiElement(VlangTokenType.])(']')
          PsiElement(VlangTokenType.==)('==')
          STRING_LITERAL
            STRING_TEMPLATE
              PsiElement(VlangTokenType.OPEN_QUOTE)(''')
              PsiElement(VlangTokenType.LITERAL_STRING_TEMPLATE_ENTRY)('omega')
              PsiElement(VlangTokenType.CLOSING_QUOTE)(''')
      PsiElement(VlangTokenType.})('}')